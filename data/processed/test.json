[
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the eligibility restrictions for clinical study NCT03780233?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'ad4mat', 'aiAgents', 'CTCP', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# CTCP(nctid='NCT03780233') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please tell me the market price of the token with the address 0xACDF135797068924 on Polygon."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'kiwicom_assistant_and_flights_search', 'form', 'smarter_contracts', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# smarter_contracts(network='Polygon', contract_address='0xACDF135797068924', query_type='market_price') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me PancakeSwap's current stats."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'defillama', 'MemeGenerator', 'CMoneyPortfolio', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# defillama(protocol='PancakeSwap', data_type='current') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Analyze the MediaTek stock performance on a weekly basis in the last quarter."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'CMoneyPortfolio', 'Austrian_Bank_Rates', 'html_css_japanese_stroke_viewer', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# CMoneyPortfolio(stockName='MediaTek', queryType='Performance', startDate='2021-10-01', endDate='2021-12-31', period='weekly') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the total amount of sales generated by each store location for the period of July to September 2021"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'quick_url', 'html_css_japanese_stroke_viewer', 'search', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# AI2sql(natural_text='Find the total amount of sales generated by each store location for the period of July to September 2021') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Summarize the content of the third slide in the PowerPoint presentation."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'astrodaily', 'ask_my_first_million_podcast_chatbot', 'aiAgents', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #CallAPI# talkwithdocs(file_path='presentation.pptx', query='Summarize the content of the third slide.', file_type='.pptx') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find information about American Red Cross."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'charity', 'Austrian_Bank_Rates', 'AgentSQL', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #CallAPI# charity(name='American Red Cross') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the average salary of employees in the employees table?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'talkwithdocs', 'aiAgents', 'talkfpl', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# AgentSQL(dataSource='csv', database='SQLGPT', tableName='employees', query='SELECT AVG(salary) as average_salary FROM \"SQLGPT\".\"employees\".\"employees\";') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Are the images on my website online-store.co optimized for better marketing?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'talkwithdocs', 'directual', 'giftwrap', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# contentifyMarketingAI(website='online-store.co', queryType='image_optimization') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need tickets for a theatre show in London on September 30th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'fortunecookie', 'smarter_contracts', 'revelo_talent_finder', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# booktickets(location='London', date_start='2022-09-30', date_end='2022-09-30', event_type='theatre') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Are there any completed clinical trials for lung cancer in Canada?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'giftwrap', 'charity', 'trambellir_treatments', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #CallAPI# mytomorrows_clinical_trial_search(condition='lung cancer', location='Canada', status='completed') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Examine the newest political news on trade agreements."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'AgentSQL', 'shopbest', 'noteable', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# fiscalnote(dataType='political news', keyword='trade agreements') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I share my Python notebook (file_id: wxyz9876) with my colleagues?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'noteable', 'uk_politics', 'timenavi', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# noteable(task='share_notebook', file_id='wxyz9876') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the most recent studies on climate change and its impact on ecosystems?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'avian', 'lawyer_lookup', 'scholarai', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #CallAPI# scholarai(query='climate change impact ecosystems', detail_level='abstract', zotero_user_id='user_864', zotero_api_key='api_key_864') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you recommend top 3 espresso machines for €200 or less?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'sleek_choice', 'StockData', 'drink_maestro', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# sleek_choice(category='espresso machines', budget_min=0, budget_max=200, currency='EUR') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Suggest a defender to transfer in with a budget of 5 million"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'Chainstack', 'talkfpl', 'html_css_japanese_stroke_viewer', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# talkfpl(action='position_recommendation', transfer_budget=5.0, position='defender') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please improve my resume without tailoring it to a specific job."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'Persona', 'timenavi', 'AaronBrowser', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# CLevelResume(tailor_position=False, job_url='', job_details={}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate a repayment plan for a 6-year auto loan of $18,000 with a 3.75% interest rate."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CreditYelp', 'consensus_search', 'html_css_japanese_stroke_viewer', 'WPressGenie', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# CreditYelp(loan_type='auto', principal=18000, interest_rate=3.75, loan_duration=6) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create monetized links for these products"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'DobaWorldFactory', 'aiAgents', 'ad4mat', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #CallAPI# ad4mat(api_key='your_api_key', user_id=456, site_id=963, product_urls=['https://store.com/product1', 'https://store.com/product2']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Teach me how to write the kanji '雨' in steps"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'Xpapers_arXiv_paper_database', 'talkwithdocs', 'MixerBox_OnePlayer_music', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# html_css_japanese_stroke_viewer(character='雨', step_by_step=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Examine digitalwalletsite.io for the presence of any cross-site scripting vulnerabilities."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'talkwithdocs', 'university_lecture_retrieval', 'CLevelResume', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #CallAPI# hackit_web_scanner(url='digitalwalletsite.io', depth=2, user_agent='Mozilla/5.0', scan_type='xss') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me improve the content structure of my travel-website.com for better user experience."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'paperchat', 'lawyer_lookup', 'contentifyMarketingAI', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #CallAPI# contentifyMarketingAI(website='travel-website.com', queryType='content_structure') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for articles on generative adversarial networks but skip pdf URLs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'AI2sql', 'Xpapers_arXiv_paper_database', 'For_io', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# Xpapers_arXiv_paper_database(keywords='generative adversarial networks', limit=5, show_abstracts=False, show_references=True, show_pdf_urls=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Develop a social network platform with users, posts, and friends tables."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'Rogo', 'Coupert', 'quick_url', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #CallAPI# For_io(task='create_app', schema={'tables': ['users', 'posts', 'friends']}, requirements='social network platform') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a list of e-commerce companies in Los Angeles"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'sleek_choice', 'StockData', 'form', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# clearbit_integration(query_type='prospecting', search_term='e-commerce', additional_params={'location': 'Los Angeles'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me insights on Tesla's website visitors?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'avian', 'remarkable_people_podcast_spext', 'form', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #CallAPI# clearbit_integration(query_type='reveal', search_term='Tesla') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What smartphones are available for less than $400?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'Shop_AIssistant', 'CLevelResume', 'avian', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# Shop_AIssistant(product='smartphones', max_price=400) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Determine the Gas Price on the Ethereum blockchain."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'quick_url', 'fortunecookie', 'vafl', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# Chainstack(operation='get_gas_price', blockchain_type='ethereum', contract_address='') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I enhance my spiritual growth and journey?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'AeroDex', 'remarkable_people_podcast_spext', 'Tarot', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# Tarot(inquiry='enhance spiritual growth and journey', user_id=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me some laptops under $900 from Best Buy."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'StockData', 'Shop_AIssistant', 'converter_app', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #CallAPI# Shop_AIssistant(product='laptops', max_price=900, merchant='Best Buy') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you help me understand the direction of my current personal relationships?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'form', 'uk_politics', 'Tarot', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# Tarot(inquiry='direction of current personal relationships', user_id=6) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a PDF from this Google Drive link converted to a Word document"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'open_prompt_library', 'converter_app', 'lawyer_lookup', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #CallAPI# converter_app(action='convert_file', input_url='https://drive.google.com/file_id', input_format='PDF', output_format='DOCX') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm looking for a criminal defense lawyer in Fresno who knows Russian"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'drink_maestro', 'timenavi', 'lawyer_lookup', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# lawyer_lookup(specialty='criminal defense', language='Russian', city='Fresno') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see a list of phase 2 clinical trials for rheumatoid arthritis in the UK"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'mytomorrows_clinical_trial_search', 'PlaylistAI_for_Spotify', 'Rogo', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# mytomorrows_clinical_trial_search(condition='rheumatoid arthritis', location='UK', phase='2') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify senior software engineers with C++ proficiency and 7+ years of experience"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'CreditYelp', 'aiAgents', 'fiscalnote', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# revelo_talent_finder(job_position='Senior Software Engineer', experience=7, skills=['C++']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What guidance do hadiths provide on marriage?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'AeroDex', 'drink_maestro', 'hadith', 'PHITURE'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'} #CallAPI# hadith(topic='marriage', max_results=3, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve the 6-month fundamental data for NVIDIA Corporation (NVDA)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'noteable', 'Austrian_Bank_Rates', 'consensus_search', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# StockData(symbol='NVDA', content='fundamental', period='6m') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a financial management software with transactions and accounts tables and user authentication."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'html_css_japanese_stroke_viewer', 'AI2sql', 'Persona', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# For_io(task='create_app', schema={'tables': ['transactions', 'accounts'], 'authentication': 'user'}, requirements='financial management software') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate the sum of order_amount for each city in the orders table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'AgentSQL', 'AI2sql', 'shopbest', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# AgentSQL(dataSource='csv', database='SQLGPT', tableName='orders', query='SELECT city, SUM(order_amount) as total_order_amount FROM \"SQLGPT\".\"orders\".\"orders\" GROUP BY city;') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me the top 5 spa treatments in Bali."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'fiscalnote', 'form', 'revelo_talent_finder', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# trambellir_treatments(search_query='spa treatments', results_limit=5, location='Bali', sort_by='rating') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Build a survey to find out the satisfaction level of our employees"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'DobaWorldFactory', 'form', 'For_io', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='survey', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compare Facebook ad revenue for the past month and the previous month."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'avian', 'remarkable_people_podcast_spext', 'Astrology', 'hadith'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'} #CallAPI# avian(platform='Facebook Ads', query_type='revenue', start_date='-2months', end_date='-1month', account_id='user_facebook_account') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the stroke order for the character '木'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'charity', 'ask_my_first_million_podcast_chatbot', 'remarkable_people_podcast_spext', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# html_css_japanese_stroke_viewer(character='木', step_by_step=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the current clinical trials for Parkinson's disease in phase 3?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CreditYelp', 'Austrian_Bank_Rates', 'mytomorrows_clinical_trial_search', 'WPressGenie', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# mytomorrows_clinical_trial_search(condition='Parkinson\\'s disease', phase='3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a list of 15 illnesses connected to fatigue."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'monarch', 'university_lecture_retrieval', 'quick_url', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# monarch(search_term='fatigue', search_type='phenotype_diseases', limit=15) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the P/E ratio of the CryptoKitties collection?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'trambellir_treatments', 'PEForNFTs', 'astrodaily', 'uk_politics'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'} #CallAPI# PEForNFTs(collection='CryptoKitties') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you provide the stats for my short link http://quicku.rl/67890 but only for the past week?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'DobaWorldFactory', 'hadith', 'ask_my_first_million_podcast_chatbot', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# quick_url(action='stats', link='http://quicku.rl/67890', optional_args={'time_range': 'past_week'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I wanna learn how to make a classic whiskey sour."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'defillama', 'MemeGenerator', 'lawyer_lookup', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# drink_maestro(drink_name='whiskey sour', language='en', pun_jokes=True, emojis=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for a housewarming gift for my sister under $50."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'aiAgents', 'talkwithdocs', 'giftwrap', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# giftwrap(occasion='housewarming', recipient='sister', relationship='family', budget=50) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Schedule a dinner with friends at 8:00 PM on Friday, March 4."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'DobaWorldFactory', 'mytomorrows_clinical_trial_search', 'timenavi', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# timenavi(action='create_event', user_id=1, event_name='Dinner with Friends', start_time='2022-03-04T20:00:00', event_description='Meet friends for dinner') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Revise my resume for a CFO position in tech industry, but I don't have a specific job link."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'talkfpl', 'voiceover', 'converter_app', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# CLevelResume(tailor_position=True, job_url='', job_details={'job_title': 'CFO', 'industry': 'tech'}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me an overview of the current research on nanotechnology applications in medicine."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'contentifyMarketingAI', 'three_sentence_service', 'Xpapers_arXiv_paper_database', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# scholarai(query='nanotechnology applications medicine', detail_level='abstract', zotero_user_id='user_546', zotero_api_key='api_key_546') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see the strokes for '水' broken down"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'html_css_japanese_stroke_viewer', 'paperchat', 'drink_maestro', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #CallAPI# html_css_japanese_stroke_viewer(character='水', step_by_step=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide a detailed payoff schedule for my $20,000 auto loan with a 4% interest rate over 5 years."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'CreditYelp', 'StockData', 'CTCP', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# CreditYelp(loan_type='auto', principal=20000, interest_rate=4, loan_duration=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate affiliate tracking links for my clients"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'StockData', 'ixigo_trip_planner', 'ad4mat', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# ad4mat(api_key='your_api_key', user_id=789, site_id=159, product_urls=['https://example.com/item1', 'https://example.com/item2', 'https://example.com/item3']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Who are the best captain options for next gameweek?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'monarch', 'talkfpl', 'PlaylistAI_for_Spotify', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# talkfpl(action='captain_recommendation') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Synthesize a soothing female voice saying 'Relax and take a deep breath.'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'serviceCheck', 'Xpapers_arXiv_paper_database', 'voiceover', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# voiceover(text='Relax and take a deep breath.', voice_type='Soothing_Female', speed=1.0, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to give a surprise wine tasting experience to my husband in Rome. Any suggestions?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'PHITURE', 'talkfpl', 'mytomorrows_clinical_trial_search', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #CallAPI# vafl(endpoint='/generate_gift_v2', description='wine tasting experience, husband', location='Rome') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Automate my playlist creation using ChatGPT song recommendations"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'three_sentence_service', 'directual', 'PlaylistAI_for_Spotify', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# PlaylistAI_for_Spotify(song_list=recommended_songs_list, user_id=user_id_info, access_token=user_auth_code) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a Distracted Boyfriend meme with 'Current AI', 'New AI', and 'User'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'PHITURE', 'html_css_japanese_stroke_viewer', 'MemeGenerator', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# MemeGenerator(template='Distracted Boyfriend', text1='Current AI', text2='New AI\\nUser') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Analyze the search frequency of 'e-commerce' in the Japanese Android market."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'avian', 'search', 'Austrian_Bank_Rates', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #CallAPI# PHITURE(keyword='e-commerce', platform='Android', region='JP') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me some digital illustration courses to level up my skills."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'kiwicom_assistant_and_flights_search', 'sleek_choice', 'fiscalnote', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #CallAPI# search(query='digital illustration courses', count=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a personal injury lawyer in Sacramento who speaks Spanish"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'CreditYelp', 'lawyer_lookup', 'DobaWorldFactory', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# lawyer_lookup(specialty='personal injury', language='Spanish', city='Sacramento') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tips for maintaining a work-life balance?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'bgg_assistant', 'consensus_search', 'Austrian_Bank_Rates', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #CallAPI# remarkable_people_podcast_spext(search_query='work-life balance', episode_limit=4, sort_by='recent', time_range='all_time') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to find concerts in New York between August 1st and August 10th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'booktickets', 'university_lecture_retrieval', 'aiAgents', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# booktickets(location='New York', date_start='2022-08-01', date_end='2022-08-10', event_type='concert') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you analyze the eligibility requirements of trial NCT05589965?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'search', 'astrodaily', 'avian', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# CTCP(nctid='NCT05589965') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How would Nelson Mandela tackle the issue of racial discrimination?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'voiceover', 'three_sentence_service', 'AgentSQL', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# Persona(character_name='Nelson Mandela', character_trait='compassionate', character_expertise='racial equality') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me about some machine learning models for sentiment analysis."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'three_sentence_service', 'remarkable_people_podcast_spext', 'MLPaperReader', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #CallAPI# MLPaperReader(topic='sentiment analysis', question='machine learning models', max_results=6) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you provide advice on kindness from hadith?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'bgg_assistant', 'Persona', 'vafl', 'hadith'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'} #CallAPI# hadith(topic='kindness', max_results=5, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Any game design courses for someone interested in joining the industry?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'search', 'WPressGenie', 'Tarot', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# search(query='game design courses', count=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What was the UK Independence Party's (UKIP) stance on climate change in 2010?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'uk_politics', 'CLevelResume', 'noteable', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# uk_politics(search_term='climate change', document_type='manifesto', year=2010, party='UKIP') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get the list of employees who joined after 2015 in the employees table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'charity', 'bgg_assistant', 'AgentSQL', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# AgentSQL(dataSource='snowflake', database='myDatabase', tableName='employees', query='SELECT employee_id, first_name, last_name, join_date FROM \"myDatabase\".\"employees\".\"employees\" WHERE EXTRACT(YEAR, join_date) > 2015;') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to discuss time management strategies with Brian Tracy."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'vafl', 'Persona', 'Shop_AIssistant', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# Persona(character_name='Brian Tracy', character_trait='result-oriented', character_expertise='time management') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you display images of Mars from NASA's collection?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'astrodaily', 'WhizList', 'open_prompt_library', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #CallAPI# astrodaily(action='search', query='Mars') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a data scientist in San Francisco with expertise in machine learning and TensorFlow"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'defillama', 'revelo_talent_finder', 'drink_maestro', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# revelo_talent_finder(job_position='Data Scientist', skills=['Machine Learning', 'TensorFlow'], location='San Francisco') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Reveal the price to earnings ratio of the Axie Infinity collection."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'uk_politics', 'DobaWorldFactory', 'WhizList', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# PEForNFTs(collection='Axie Infinity') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need an elder female voice reading this sentence: 'In my time, things were much simpler.'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'voiceover', 'Rogo', 'CTCP', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #CallAPI# voiceover(text='In my time, things were much simpler.', voice_type='Elder_Female', speed=1.0, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a playlist with the latest top-charting country music."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'search', 'fiscalnote', 'WhizList', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# WhizList(genre='country', mood=None, decade=None, length=None, popularity='top-charting') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Perform the tasks outlined in the 'Evening_Routine' service"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'PHITURE', 'scholarai', 'Persona', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# three_sentence_service(action='invoke', service_name='Evening_Routine') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Design a blog app, which includes a table for posts and another table for comments."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'tutory', 'hadith', 'CTCP', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# For_io(task='create_app', schema={'tables': ['posts', 'comments']}, requirements='blog app') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does the hadith teach about the treatment of animals?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'noteable', 'hadith', 'AgentSQL', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# hadith(topic='treatment of animals', max_results=3, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me more information about the TP53 gene."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'serviceCheck', 'talkfpl', 'directual', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# monarch(search_term='TP53', search_type='gene_info') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Chat with Gordon Ramsay about the culinary techniques used in haute cuisine."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'Persona', 'uk_politics', 'open_prompt_library', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# Persona(character_name='Gordon Ramsay', character_trait='passionate', character_expertise='fine dining and cooking') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Display the recent data for the Compound protocol today."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'defillama', 'form', 'trambellir_treatments', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# defillama(protocol='Compound', data_type='current') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the 5-year performance data of Amazon (AMZN)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'PEForNFTs', 'kiwicom_assistant_and_flights_search', 'hackit_web_scanner', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# StockData(symbol='AMZN', content='performance', period='5y') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain how to balance a chemical equation"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Xpapers_arXiv_paper_database', 'Shop_AIssistant', 'tutory', 'ask_my_first_million_podcast_chatbot', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# tutory(mode='engaging_teacher', subject='chemistry', topic='balancing_chemical_equations', user_query='Explain how to balance a chemical equation') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the current METAR and TAF for Los Angeles International Airport?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'AeroDex', 'uk_politics', 'For_io', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #CallAPI# AeroDex(call_type='weather', station_id='LAX', document_name='') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the best headphones under $50"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'sleek_choice', 'serviceCheck', 'CreditYelp', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# sleek_choice(category='headphones', budget_min=0, budget_max=50, currency='USD') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the key differences between RNN and LSTM?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'kiwicom_assistant_and_flights_search', 'MLPaperReader', 'noteable', 'talkwithdocs'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'} #CallAPI# MLPaperReader(topic='RNN LSTM', question='key differences', max_results=2) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for yoga mats under $25 at Walmart."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'Shop_AIssistant', 'lawyer_lookup', 'MLPaperReader', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# Shop_AIssistant(product='yoga mats', max_price=25, merchant='Walmart') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I navigate the challenges and opportunities in my current job?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'astrodaily', 'trambellir_treatments', 'Tarot', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# Tarot(inquiry='navigate challenges and opportunities in current job', user_id=8) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you tell me about the popularity and impressions of 'travel guide' in the Australian Google Play Store?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'StockData', 'form', 'PHITURE', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# PHITURE(keyword='travel guide', platform='Google Play', region='AU') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are some steps to analyze a poem?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'Persona', 'PlaylistAI_for_Spotify', 'tutory', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# tutory(mode='socratic_tutor', subject='literature', topic='poem_analysis', user_query='What are some steps to analyze a poem?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me prompts related to cooking"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'Tarot', 'open_prompt_library', 'clearbit_integration', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# open_prompt_library(search_type='similarity', query='cooking') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need prompts titled 'Birthday Party Ideas'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'trambellir_treatments', 'search', 'booktickets', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #CallAPI# open_prompt_library(search_type='title', query='Birthday Party Ideas') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How did the Liberal Democrats vote on the legalization of marijuana?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'monarch', 'CMoneyPortfolio', 'uk_politics', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #CallAPI# uk_politics(search_term='legalization of marijuana', document_type='voting records', party='Liberal Democrats') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you optimize my resume for a CEO position at Microsoft? Here is the job url: https://www.microsoft.com/jobs/ceo"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'CMoneyPortfolio', 'ixigo_trip_planner', 'StockData', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# CLevelResume(tailor_position=True, job_url='https://www.microsoft.com/jobs/ceo', job_details={}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the transaction fee structure for the smart contract 0xACE1357924608FBD on Ethereum network?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'smarter_contracts', 'AgentSQL', 'revelo_talent_finder', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# smarter_contracts(network='Ethereum', contract_address='0xACE1357924608FBD', query_type='transaction_fee_structure') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve my planned vacations for Summer 2022."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'html_css_japanese_stroke_viewer', 'AgentSQL', 'timenavi', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# timenavi(action='retrieve_events', user_id=1, start_time='2022-06-01T00:00:00', end_time='2022-08-31T23:59:59', category='vacation') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the role of enzymes in biochemical reactions?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'ixigo_trip_planner', 'tutory', 'lawyer_lookup', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #CallAPI# university_lecture_retrieval(search_terms='enzymes role biochemical reactions', course_subject='biochemistry', result_limit=4) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Play some electronic dance music"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Tarot', 'MixerBox_OnePlayer_music', 'voiceover', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# MixerBox_OnePlayer_music(search='playlist', category='genre', genre='electronic dance') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide an analysis of TSMC stock and its trends over the last month."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'form', 'Astrology', 'vafl', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# CMoneyPortfolio(stockName='TSMC', queryType='Trends', startDate='2021-12-01', endDate='2021-12-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What advice do you have for new entrepreneurs?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'clearbit_integration', 'WPressGenie', 'monarch', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='What advice do you have for new entrepreneurs?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does my zodiac reveal about me? I was born September 9, 1988, 4:30 AM, in Moscow, Russia."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'scholarai', 'Astrology', 'astrodaily', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #CallAPI# Astrology(birth_year=1988, birth_month=9, birth_day=9, birth_time='4:30 AM', birth_location='Moscow, Russia') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide me with a list of reputable shoe manufacturers in South America."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'PEForNFTs', 'open_prompt_library', 'DobaWorldFactory', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# DobaWorldFactory(product_query='shoe', trade_region='South America') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me find typography courses to enhance my knowledge."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'search', 'directual', 'avian', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #CallAPI# search(query='typography courses', count=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you create me a feedback questionnaire?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'CTCP', 'form', 'shopbest', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='questionnaire', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What kind of adventure experience can I offer to my brother in Sydney?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'CTCP', 'vafl', 'ad4mat', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #CallAPI# vafl(endpoint='/generate_gift_v2', description='brother, adventure', location='Sydney') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Should I play my wildcard this gameweek?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'shopbest', 'MixerBox_OnePlayer_music', 'noteable', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# talkfpl(action='wildcard_advice', team_id=12345) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Evaluate the internal linking strategy on my news-site.org and offer recommendations."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'contentifyMarketingAI', 'Tarot', 'revelo_talent_finder', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# contentifyMarketingAI(website='news-site.org', queryType='internal_linking') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm trying to find a pottery class for my aunt in London."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'talkwithdocs', 'Chainstack', 'mytomorrows_clinical_trial_search', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #CallAPI# vafl(endpoint='/query', description='pottery class, aunt', location='London') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to monetize my blog's outgoing traffic using ad4mat for the given product URLs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'voiceover', 'ad4mat', 'defillama', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# ad4mat(api_key='your_api_key', user_id=753, site_id=825, product_urls=['https://sportsstore.com/protein123', 'https://sportsstore.com/protein456']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please shorten this link for me: https://www.example.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'directual', 'quick_url', 'PHITURE', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #CallAPI# quick_url(action='shorten', link='https://www.example.com') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Look for prompts with the title 'Travel Tips'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'ixigo_trip_planner', 'directual', 'open_prompt_library', 'hadith'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'} #CallAPI# open_prompt_library(search_type='title', query='Travel Tips') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the best party games according to user rankings?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'bgg_assistant', 'drink_maestro', 'fortunecookie', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# bgg_assistant(endpoint='category', category='party', num_results=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the title of the following article: https://www.example.com/article"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'charity', 'converter_app', 'shopbest', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# AaronBrowser(url='https://www.example.com/article', action='extract', query='title') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the recommendations mentioned in the .epub business guide?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'Austrian_Bank_Rates', 'talkwithdocs', 'talkfpl', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# talkwithdocs(file_path='business_guide.epub', query='What are the recommendations mentioned in the business guide?', file_type='.epub') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a playlist of ChatGPT's song suggestions on Spotify"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'talkwithdocs', 'PlaylistAI_for_Spotify', 'CLevelResume', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# PlaylistAI_for_Spotify(song_list=suggested_songs, user_id=user_identification, access_token=token_credentials) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm looking to plan a trip from Moscow to Unalaska within a $4000 budget. Departing on 30th April and returning on 10th May."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'open_prompt_library', 'Shop_AIssistant', 'voiceover', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #CallAPI# ixigo_trip_planner(origin_city='Moscow', destination_city='Unalaska', departure_date='2021-04-30', return_date='2021-05-10', budget=4000) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Locate top car battery suppliers in Asia."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'search', 'DobaWorldFactory', 'MixerBox_OnePlayer_music', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# DobaWorldFactory(product_query='car battery', trade_region='Asia') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the latest development in the field of artificial intelligence?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'PHITURE', 'giftwrap', 'quick_url', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #CallAPI# paperchat(query='latest development in artificial intelligence', max_results=5, search_fields='title,abstract') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the advances in natural language processing in the past year?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'CMoneyPortfolio', 'hackit_web_scanner', 'voiceover', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #CallAPI# paperchat(query='advances in natural language processing', max_results=5, search_fields='title,abstract,date') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need an Italian speaking tax lawyer in San Diego"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'lawyer_lookup', 'converter_app', 'giftwrap', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# lawyer_lookup(specialty='tax', language='Italian', city='San Diego') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Arrange a trip for me from Shanghai to Dublin, starting on 18th September and ending on 28th September. My budget is $3000."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'ixigo_trip_planner', 'Coupert', 'tutory', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# ixigo_trip_planner(origin_city='Shanghai', destination_city='Dublin', departure_date='2021-09-18', return_date='2021-09-28', budget=3000) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to practice writing '太陽' with a step-by-step animation"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'html_css_japanese_stroke_viewer', 'Austrian_Bank_Rates', 'contentifyMarketingAI', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# html_css_japanese_stroke_viewer(character='太陽', step_by_step=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What challenges will I face when raising funds for my startup?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'bgg_assistant', 'PlaylistAI_for_Spotify', 'ask_my_first_million_podcast_chatbot', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='What challenges will I face when raising funds for my startup?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I make a Margarita?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'Persona', 'noteable', 'uk_politics', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# drink_maestro(drink_name='Margarita', language='en', pun_jokes=True, emojis=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the growth trend of open-source repositories with 1000 stars or more in the last year?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'Tarot', 'PlaylistAI_for_Spotify', 'Persona', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# Rogo(query='growth trend open-source repositories 1000 stars last year', result_format='table', chart_image=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What do the stars say about my personality? March 31, 1999, 7:20 PM, in Rome, Italy."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'For_io', 'open_prompt_library', 'Astrology', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# Astrology(birth_year=1999, birth_month=3, birth_day=31, birth_time='7:20 PM', birth_location='Rome, Italy') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the character list in the .txt novel?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'talkwithdocs', 'hackit_web_scanner', 'For_io', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# talkwithdocs(file_path='novel.txt', query='What is the character list in the novel?', file_type='.txt') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Advices from Guy Kawasaki's podcast guests on dealing with failure and setbacks."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'CTCP', 'remarkable_people_podcast_spext', 'StockData', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# remarkable_people_podcast_spext(search_query='dealing with failure', episode_limit=3, sort_by='popularity', time_range='all_time') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to create a time-series forecast with the 'forecast' package in my R notebook."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'MLPaperReader', 'noteable', 'html_css_japanese_stroke_viewer', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #CallAPI# noteable(task='install_package', kernel='R', code='install.packages(\"forecast\")') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you find a recent research paper on quantum computing algorithms?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'consensus_search', 'paperchat', 'CreditYelp', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# paperchat(query='quantum computing algorithms', max_results=1, search_fields='title,abstract,date') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to know more about my astrology . I was born on December 5, 1995, 2:15 AM in Paris, France."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'Astrology', 'aiAgents', 'StockData', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# Astrology(birth_year=1995, birth_month=12, birth_day=5, birth_time='2:15 AM', birth_location='Paris, France') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List 10 popular games in the strategy category"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'StockData', 'revelo_talent_finder', 'bgg_assistant', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# bgg_assistant(endpoint='category', category='strategy', num_results=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many posts are there on my website? The address is mywebsite.com."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'tutory', 'form', 'charity', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# WPressGenie(site_url='mywebsite.com', action='count_posts') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find images from NASA that feature the Andromeda galaxy."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CreditYelp', 'directual', 'astrodaily', 'kiwicom_assistant_and_flights_search', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #CallAPI# astrodaily(action='search', query='Andromeda galaxy') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you please provide the DNS lookup for the domain websiteexample.org?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'ask_my_first_million_podcast_chatbot', 'directual', 'CLevelResume', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# serviceCheck(serviceType='CheckDns', host='websiteexample.org') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch information about Facebook"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'html_css_japanese_stroke_viewer', 'hadith', 'AgentSQL', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# clearbit_integration(query_type='enrichment', search_term='Facebook') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Best kitchen appliances on Amazon with short review summaries, please."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'ask_my_first_million_podcast_chatbot', 'timenavi', 'shopbest', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# shopbest(product_category='kitchen_appliances', review_length=1, sort_by='rating', limit=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Organize a survey to measure the environmental concerns of our community members"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'booktickets', 'paperchat', 'PEForNFTs', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='survey', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can Directual help me develop a moderate web application for my small business?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'directual', 'ad4mat', 'MemeGenerator', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #CallAPI# directual(action='develop', appType='web', complexity='moderate', scale='small') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me create a Python notebook to analyze sales data."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'ad4mat', 'noteable', 'AI2sql', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# noteable(task='create', kernel='python') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like an R&B playlist for a romantic evening."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'charity', 'WhizList', 'remarkable_people_podcast_spext', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# WhizList(genre='R&B', mood='romantic', decade=None, length=None, popularity=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I create a simple web app using Directual?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'paperchat', 'open_prompt_library', 'directual', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# directual(action='create', appType='web', complexity='simple', scale='small') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please find the count of distinct values in the category column of the inventory table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'scholarai', 'AgentSQL', 'revelo_talent_finder', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# AgentSQL(dataSource='csv', database='SQLGPT', tableName='inventory', query='SELECT COUNT(DISTINCT category) as distinct_categories FROM \"SQLGPT\".\"inventory\".\"inventory\";') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me the interest rates of savings accounts offered by BAWAG P.S.K."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'voiceover', 'PHITURE', 'defillama', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# Austrian_Bank_Rates(bank_name='BAWAG P.S.K.', product_type='savings', detail='interest') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you give me a recipe for a made-up funny drink?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'paperchat', 'bgg_assistant', 'For_io', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# drink_maestro(drink_name='funny made-up', language='en', pun_jokes=True, emojis=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Check if there's any DDoS vulnerability on the website gamingplatform.net."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'Austrian_Bank_Rates', 'remarkable_people_podcast_spext', 'hackit_web_scanner', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# hackit_web_scanner(url='gamingplatform.net', depth=1, user_agent='Mozilla/5.0', scan_type='ddos_vulnerability') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the top-rated smart speakers between $100 and $200?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'Xpapers_arXiv_paper_database', 'MLPaperReader', 'vafl', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# sleek_choice(category='smart speakers', budget_min=100, budget_max=200, currency='USD') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get the total supply of the ERC20 token with contract address 0x862558a3dc0bc93f310579d1da9ebaa177a5b888."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'Chainstack', 'fortunecookie', 'PEForNFTs', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# Chainstack(operation='get_total_supply', blockchain_type='ethereum', contract_address='0x862558a3dc0bc93f310579d1da9ebaa177a5b888') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the fortune cookie message for number 6?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'open_prompt_library', 'timenavi', 'clearbit_integration', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #CallAPI# fortunecookie(user_number=6, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate an itinerary from Cairo to Oslo on 24th March with a return on 2nd April and a budget no more than $1200."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'StockData', 'CreditYelp', 'trambellir_treatments', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #CallAPI# ixigo_trip_planner(origin_city='Cairo', destination_city='Oslo', departure_date='2021-03-24', return_date='2021-04-02', budget=1200) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a Spotify playlist for the list of songs provided by ChatGPT"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'CLevelResume', 'paperchat', 'PlaylistAI_for_Spotify', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# PlaylistAI_for_Spotify(song_list=given_songs, user_id=user_id, access_token=user_token) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get a summary of the revenue growth of Acer Inc. for the past year."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'giftwrap', 'Persona', 'CMoneyPortfolio', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# CMoneyPortfolio(stockName='Acer', queryType='RevenueGrowth', startDate='2021-01-01', endDate='2021-12-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Display the total number of orders placed by each customer in the past year"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'tutory', 'quick_url', 'MixerBox_OnePlayer_music', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# AI2sql(natural_text='Display the total number of orders placed by each customer in the past year') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Scrape the contact information from this website: https://www.example-business.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'avian', 'defillama', 'html_css_japanese_stroke_viewer', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #CallAPI# AaronBrowser(url='https://www.example-business.com', action='scrape', query='contact information') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please generate a fortune for number 2."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'For_io', 'shopbest', 'vafl', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# fortunecookie(user_number=2, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a project manager with Agile experience and excellent communication skills"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'Austrian_Bank_Rates', 'revelo_talent_finder', 'MixerBox_OnePlayer_music', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# revelo_talent_finder(job_position='Project Manager', skills=['Agile', 'Communication']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the Google Analytics traffic from the last 30 days."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'converter_app', 'AI2sql', 'paperchat', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# avian(platform='Google Analytics', query_type='traffic', start_date='-30days', end_date='today') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please display the average session duration of my website on Google Analytics for June."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'AaronBrowser', 'WPressGenie', 'avian', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# avian(platform='Google Analytics', query_type='avg_session_duration', start_date='2022-06-01', end_date='2022-06-30') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Discover experienced Android developers with at least 5 years of experience"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'form', 'revelo_talent_finder', 'timenavi', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# revelo_talent_finder(job_position='Android Developer', experience=5, skills=['Android']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the click-through rate of my latest Facebook ad campaign?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'voiceover', 'fortunecookie', 'avian', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# avian(platform='Facebook Ads', query_type='click_through_rate', start_date='campaign_start_date', end_date='campaign_end_date', account_id='user_facebook_account') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get me the data on 'language learning' keyword trends for the French Google Play Store."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'ixigo_trip_planner', 'AgentSQL', 'MemeGenerator', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #CallAPI# PHITURE(keyword='language learning', platform='Google Play', region='FR') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Split the video at this Google Drive link into 5 seconds long clips"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'PEForNFTs', 'lawyer_lookup', 'search', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #CallAPI# converter_app(action='split_video', input_url='https://drive.google.com/video_id', input_format='', output_format='', additional_params={'duration': 5}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need the metadata for this webpage: https://www.example.com/blogpost"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'html_css_japanese_stroke_viewer', 'For_io', 'tutory', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# AaronBrowser(url='https://www.example.com/blogpost', action='extract', query='metadata') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you please aggregate articles about new smartphone releases from these websites? https://www.example-tech.com and https://www.example-gadgets.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'bgg_assistant', 'Coupert', 'converter_app', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# AaronBrowser(url='https://www.example-tech.com,https://www.example-gadgets.com', action='aggregate', query='new smartphone releases') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Develop an e-commerce platform with products, users, and orders tables."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'noteable', 'university_lecture_retrieval', 'drink_maestro', 'StockData'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"} #CallAPI# For_io(task='create_app', schema={'tables': ['products', 'users', 'orders']}, requirements='e-commerce platform') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need to detect SQL injection on mysupershop.net."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'hackit_web_scanner', 'WPressGenie', 'Xpapers_arXiv_paper_database', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# hackit_web_scanner(url='mysupershop.net', depth=1, user_agent='Mozilla/5.0', scan_type='sql_injection') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify three key benefits of adopting AI in the field of healthcare"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'voiceover', 'MemeGenerator', 'aiAgents', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #CallAPI# aiAgents(userDescription='Collaborative AI for unparalleled results', chatGPTDescription='Enhance AI-driven solutions through teamwork', query='Key benefits of AI in healthcare') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What sports events are happening in Los Angeles this weekend?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'Persona', 'serviceCheck', 'kiwicom_assistant_and_flights_search', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# booktickets(location='Los Angeles', date_start='2022-07-16', date_end='2022-07-17', event_type='sports') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the benefits of using renewable energy sources?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'trambellir_treatments', 'hackit_web_scanner', 'consensus_search', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #CallAPI# consensus_search(query='Show me the benefits of using renewable energy sources', num_results=7, sort_by='relevance', include_claims=True, include_papers=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many comments do I have on post with ID 42 on my site exampleweb.com?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'defillama', 'ask_my_first_million_podcast_chatbot', 'fiscalnote', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# WPressGenie(site_url='exampleweb.com', action='get_post_comment_count', post_id=42) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the terms of checking accounts from Raiffeisen Bank."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'drink_maestro', 'talkwithdocs', 'CreditYelp', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# Austrian_Bank_Rates(bank_name='Raiffeisen Bank', product_type='checking') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for immigration lawyers in Los Angeles fluent in Chinese"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'hadith', 'defillama', 'lawyer_lookup', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# lawyer_lookup(specialty='immigration', language='Chinese', city='Los Angeles') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate data for the Uniswap protocol over the last month."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'noteable', 'Astrology', 'WhizList', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# defillama(protocol='Uniswap', data_type='historical', start_date='2022-01-01', end_date='2022-01-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the current price of Apple Inc. (AAPL) stock?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'StockData', 'Rogo', 'charity', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #CallAPI# StockData(symbol='AAPL', content='price') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the top 5 prompts used this week"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'CMoneyPortfolio', 'avian', 'open_prompt_library', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# open_prompt_library(search_type='top_prompts', time_frame='week', top_prompts=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me the eligibility criteria for the clinical study NCT00533862."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'WPressGenie', 'uk_politics', 'PHITURE', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# CTCP(nctid='NCT00533862') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you please provide a comprehensive review of research papers on Alzheimer's disease?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'scholarai', 'AgentSQL', 'trambellir_treatments', 'CreditYelp'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'} #CallAPI# scholarai(query='Alzheimer disease research review', detail_level='full_text', zotero_user_id='user_753', zotero_api_key='api_key_753') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch data about the owner of token with contract address 0xFEDCBA1357902468 on Polygon."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'tutory', 'kiwicom_assistant_and_flights_search', 'open_prompt_library', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #CallAPI# smarter_contracts(network='Polygon', contract_address='0xFEDCBA1357902468', query_type='token_owner') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the recent advancements in GANs?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'MLPaperReader', 'form', 'booktickets', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #CallAPI# MLPaperReader(topic='GANs', question='recent advancements', max_results=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get debt ratios for AU Optronics Corp. during 2021."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'MixerBox_OnePlayer_music', 'AaronBrowser', 'CMoneyPortfolio', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #CallAPI# CMoneyPortfolio(stockName='AUO', queryType='DebtRatios', startDate='2021-01-01', endDate='2021-12-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find all my meetings this week."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'avian', 'CTCP', 'university_lecture_retrieval', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# timenavi(action='retrieve_events', user_id=1, start_time='2022-02-21T00:00:00', end_time='2022-02-27T23:59:59', category='meeting') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Look for information about the role of Graph Neural Networks in drug discovery."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'paperchat', 'three_sentence_service', 'For_io', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# paperchat(query='Graph Neural Networks drug discovery', max_results=3, search_fields='title,abstract') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for a 2020 paper discussing Convolutional Neural Networks in image classification."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'ixigo_trip_planner', 'paperchat', 'booktickets', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# paperchat(query='2020 Convolutional Neural Networks image classification', max_results=1, search_fields='title, abstract, date') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need an appropriate farewell gift for my colleague."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'quick_url', 'open_prompt_library', 'Austrian_Bank_Rates', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# giftwrap(occasion='farewell', recipient='colleague', relationship='work') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me the yearly risk data for Facebook (FB)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'tutory', 'AeroDex', 'booktickets', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# StockData(symbol='FB', content='risk', period='1y') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide me information about IBM as a company"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'search', 'paperchat', 'clearbit_integration', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# clearbit_integration(query_type='enrichment', search_term='IBM') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you teach me about the water cycle?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'Coupert', 'WhizList', 'tutory', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# tutory(mode='engaging_teacher', subject='earth_science', topic='water_cycle', user_query='Can you teach me about the water cycle?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the fees for maintaining a Sparbank checking account?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'smarter_contracts', 'Austrian_Bank_Rates', 'talkfpl', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# Austrian_Bank_Rates(bank_name='Sparbank', product_type='checking', detail='maintenance_fees') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many conversions did my Google Ads campaign generate in the first half of this year?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'avian', 'AI2sql', 'Shop_AIssistant', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# avian(platform='Google Ads', query_type='conversions', start_date='2022-01-01', end_date='2022-06-30', account_id='user_google_account') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please find recent research on quantum computing."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'mytomorrows_clinical_trial_search', 'shopbest', 'scholarai', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# scholarai(query='quantum computing', detail_level='abstract', zotero_user_id='user_123', zotero_api_key='api_key_123') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find stock price changes for ASUS daily for the past week."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'WPressGenie', 'form', 'aiAgents', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# CMoneyPortfolio(stockName='ASUS', queryType='PriceChanges', startDate='2022-01-10', endDate='2022-01-17', period='daily') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get transaction details of 0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'uk_politics', 'Rogo', 'bgg_assistant', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# Chainstack(operation='get_transaction', blockchain_type='ethereum', contract_address='0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the state-of-the-art technique for object detection?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'revelo_talent_finder', 'consensus_search', 'paperchat', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# paperchat(query='state-of-the-art object detection', max_results=1, search_fields='title, abstract') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Look up recent regulatory changes in the financial services industry."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'talkfpl', 'fiscalnote', 'sleek_choice', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# fiscalnote(dataType='regulatory', keyword='financial services') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a flight from Toronto to San Francisco in the morning of 23rd October."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'kiwicom_assistant_and_flights_search', 'StockData', 'hackit_web_scanner', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# kiwicom_assistant_and_flights_search(origin='Toronto', destination='San Francisco', departure_date='23rd October') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me some Target promo codes"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'AaronBrowser', 'talkwithdocs', 'Coupert', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# Coupert(query='promo codes', store='Target', numOfCoupons=4) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me lectures about the French Revolution?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'avian', 'university_lecture_retrieval', 'AaronBrowser', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# university_lecture_retrieval(search_terms='French Revolution', course_subject='history', result_limit=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need information on ongoing clinical trials for diabetes in Europe"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'uk_politics', 'open_prompt_library', 'kiwicom_assistant_and_flights_search', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #CallAPI# mytomorrows_clinical_trial_search(condition='diabetes', location='Europe', status='ongoing') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are my Google Ads impressions for the first week of July?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'paperchat', 'avian', 'CreditYelp', 'uk_politics'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'} #CallAPI# avian(platform='Google Ads', query_type='impressions', start_date='2022-07-01', end_date='2022-07-07', account_id='user_google_account') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to see the Visual Meteorological Conditions for pilots"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'AeroDex', 'AaronBrowser', 'noteable', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #CallAPI# AeroDex(call_type='document', station_id='', document_name='Visual Meteorological Conditions') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am in the mood for some energetic electronic dance music from the 90s."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'hackit_web_scanner', 'WhizList', 'trambellir_treatments', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# WhizList(genre='electronic', mood='energetic', decade='90s', length=None, popularity=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Analyze my website example.com for SEO and give me suggestions to improve it."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'aiAgents', 'AeroDex', 'talkwithdocs', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #CallAPI# contentifyMarketingAI(website='example.com', queryType='seo_analysis') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the best 3 cameras with long review summaries, sorted by highest rating."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'search', 'PEForNFTs', 'avian', 'astrodaily'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'} #CallAPI# shopbest(product_category='cameras', review_length=3, sort_by='rating', limit=3) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to apply for a CAO position in the education sector. Can you help me customize my resume?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PlaylistAI_for_Spotify', 'contentifyMarketingAI', 'smarter_contracts', 'Xpapers_arXiv_paper_database', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# CLevelResume(tailor_position=True, job_url='', job_details={'job_title': 'CAO', 'industry': 'education'}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to buy a high-quality electric toothbrush for under $100, any suggestions?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'AaronBrowser', 'kiwicom_assistant_and_flights_search', 'Shop_AIssistant', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# sleek_choice(category='electric toothbrush', budget_min=0, budget_max=100, currency='USD') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Investigate any new regulations in the energy industry."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'booktickets', 'fiscalnote', 'For_io', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# fiscalnote(dataType='regulatory', keyword='energy') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Ask Wolfgang Amadeus Mozart to share his approach to composing music."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'lawyer_lookup', 'tutory', 'ixigo_trip_planner', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #CallAPI# Persona(character_name='Wolfgang Amadeus Mozart', character_trait='creative', character_expertise='music composition') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the content of post 35 on my site at thisismysite.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'three_sentence_service', 'Xpapers_arXiv_paper_database', 'AeroDex', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# WPressGenie(site_url='thisismysite.com', action='get_post_content', post_id=35) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I overcome anxiety and self-doubt to reach my full potential?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'Tarot', 'ad4mat', 'PHITURE', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# Tarot(inquiry='overcome anxiety and self-doubt', user_id=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a quiz on financial literacy"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'timenavi', 'CMoneyPortfolio', 'form', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='quiz', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Which gaming keyboards can I get for under $150?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'voiceover', 'lawyer_lookup', 'hadith', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# Shop_AIssistant(product='gaming keyboards', max_price=150) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I would like to review the source code of the smart contract 0x0246813579ACDEF on Ethereum."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'AaronBrowser', 'kiwicom_assistant_and_flights_search', 'smarter_contracts', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# smarter_contracts(network='Ethereum', contract_address='0x0246813579ACDEF', query_type='source_code') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me to create a catchy slogan for my new eco-friendly clothing brand"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'paperchat', 'defillama', 'drink_maestro', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# aiAgents(userDescription='Multiple AIs for maximum output', chatGPTDescription='AI collaboration for improved results', query='Catchy slogan for eco-friendly clothing brand') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List top 10 animation design courses."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'search', 'bgg_assistant', 'sleek_choice', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# search(query='animation design courses', count=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Plan my journey from London to Rome departing on the 10th of August and returning on the 20th of August with a budget constraint of $1500."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'mytomorrows_clinical_trial_search', 'booktickets', 'talkfpl', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #CallAPI# ixigo_trip_planner(origin_city='London', destination_city='Rome', departure_date='2021-08-10', return_date='2021-08-20', budget=1500) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the bounce rate for my website from Google Analytics in the last quarter."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'Persona', 'ask_my_first_million_podcast_chatbot', 'paperchat', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #CallAPI# avian(platform='Google Analytics', query_type='bounce_rate', start_date='-90days', end_date='today') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you do a natal chart reading for me? I was born on April 23, 1990, at 10:15 AM in New York City, NY."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'Astrology', 'AgentSQL', 'serviceCheck', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# Astrology(birth_year=1990, birth_month=4, birth_day=23, birth_time='10:15 AM', birth_location='New York City, NY') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you show me Liquity's statistics from March 1st to March 7th?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'Xpapers_arXiv_paper_database', 'astrodaily', 'tutory', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# defillama(protocol='Liquity', data_type='historical', start_date='2022-03-01', end_date='2022-03-07') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me how to develop an advanced web application for enterprise use with Directual."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'AI2sql', 'clearbit_integration', 'lawyer_lookup', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# directual(action='develop', appType='web', complexity='advanced', scale='large') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you suggest a refreshing summer cocktail?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'astrodaily', 'university_lecture_retrieval', 'open_prompt_library', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# drink_maestro(drink_name='summer cocktail', language='en', pun_jokes=True, emojis=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a 'One Does Not Simply' meme with the text 'One Does Not Simply Ignore ChatGPT'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'charity', 'monarch', 'Coupert', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #CallAPI# MemeGenerator(template='One Does Not Simply', text1='One Does Not Simply Ignore ChatGPT') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you provide me with the Labour party's manifesto from 2015?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'AI2sql', 'uk_politics', 'shopbest', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #CallAPI# uk_politics(search_term='manifesto', document_type='manifesto', year=2015, party='Labour') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide me with a list of the top 10 places to visit in Europe"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'defillama', 'aiAgents', 'CTCP', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# aiAgents(userDescription='Limitless AI innovation', chatGPTDescription='Achieve goals more effectively with AI collaboration', query='Top 10 places to visit in Europe') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to know about proofs in geometry."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'Astrology', 'talkfpl', 'university_lecture_retrieval', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #CallAPI# university_lecture_retrieval(search_terms='geometry proofs', course_subject='mathematics', result_limit=4) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What do hadiths say about fasting during Ramadan?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'PHITURE', 'CLevelResume', 'fortunecookie', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# hadith(topic='fasting Ramadan', max_results=4, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find images related to the Orion Nebula from NASA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'Xpapers_arXiv_paper_database', 'kiwicom_assistant_and_flights_search', 'bgg_assistant', 'astrodaily'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'} #CallAPI# astrodaily(action='search', query='Orion Nebula') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the historical details for the Yearn Finance protocol from February 20th to February 28th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'Austrian_Bank_Rates', 'consensus_search', 'timenavi', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# defillama(protocol='Yearn Finance', data_type='historical', start_date='2022-02-20', end_date='2022-02-28') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you analyze the transaction history of contract 0x987654321CBAFED on Polygon?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'smarter_contracts', 'bgg_assistant', 'sleek_choice', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# smarter_contracts(network='Polygon', contract_address='0x987654321CBAFED', query_type='transaction_history') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need coupon codes for Walmart online shopping"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'MemeGenerator', 'DobaWorldFactory', 'Coupert', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# Coupert(query='coupon codes', store='Walmart', numOfCoupons=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for industrial machinery producers in the Middle East."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'CLevelResume', 'Austrian_Bank_Rates', 'hadith', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# DobaWorldFactory(product_query='industrial machinery', trade_region='Middle East') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please demonstrate the proper stroke order for '花'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PlaylistAI_for_Spotify', 'html_css_japanese_stroke_viewer', 'PHITURE', 'MemeGenerator', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# html_css_japanese_stroke_viewer(character='花', step_by_step=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me about the applications of blockchain technology in supply chain management."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'paperchat', 'university_lecture_retrieval', 'Chainstack', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #CallAPI# paperchat(query='blockchain technology supply chain management', max_results=3, search_fields='title,abstract') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a playlist from songs generated by ChatGPT with user ID 12345"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'CreditYelp', 'PlaylistAI_for_Spotify', 'tutory', 'talkwithdocs'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'} #CallAPI# PlaylistAI_for_Spotify(song_list=generated_songs, user_id='12345', access_token=user_access_token) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What guidance do hadiths offer regarding forgiveness?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'converter_app', 'hadith', 'remarkable_people_podcast_spext', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #CallAPI# hadith(topic='forgiveness', max_results=3, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm looking for prompts similar to 'Budgeting Tips'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'AgentSQL', 'serviceCheck', 'fiscalnote', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# open_prompt_library(search_type='similarity', query='Budgeting Tips') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the Advisory Circular on Human Factors in aviation accidents"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'sleek_choice', 'AeroDex', 'AgentSQL', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# AeroDex(call_type='document', station_id='', document_name='AC 00-46') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to know the views of this shortened link http://quicku.rl/9ij87"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'revelo_talent_finder', 'CTCP', 'monarch', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# quick_url(action='stats', link='http://quicku.rl/9ij87', optional_args={'type': 'views'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Any conferences in the tech sector in San Francisco next month?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'shopbest', 'Xpapers_arXiv_paper_database', 'booktickets', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# booktickets(location='San Francisco', date_start='2022-08-01', date_end='2022-08-31', event_type='conference') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please find the IP address associated with the domain myexamplewebsite.io"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'open_prompt_library', 'ixigo_trip_planner', 'StockData', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# serviceCheck(serviceType='CheckDns', host='myexamplewebsite.io') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Browse recent events for any legal amendments in the education domain."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'AeroDex', 'fiscalnote', 'timenavi', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# fiscalnote(dataType='legal', keyword='education') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me all the active clinical trials for multiple sclerosis in Australia"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'kiwicom_assistant_and_flights_search', 'mytomorrows_clinical_trial_search', 'remarkable_people_podcast_spext', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# mytomorrows_clinical_trial_search(condition='multiple sclerosis', location='Australia', status='active') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Which are the popular Ayurvedic retreats in India?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'clearbit_integration', 'three_sentence_service', 'revelo_talent_finder', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# trambellir_treatments(search_query='Ayurvedic retreats', results_limit=10, location='India', sort_by='popularity') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you give me a fortune cookie prediction for number 1?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'PlaylistAI_for_Spotify', 'mytomorrows_clinical_trial_search', 'university_lecture_retrieval', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# fortunecookie(user_number=1, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a gift for my wife's birthday. She loves art and we live in New York."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'html_css_japanese_stroke_viewer', 'open_prompt_library', 'vafl', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# vafl(endpoint='/generate_gift_v2', description='wife, birthday, art', location='New York') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me the most recent posts from my WordPress site at myawesomeblog.com?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'directual', 'WPressGenie', 'paperchat', 'ad4mat'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'} #CallAPI# WPressGenie(site_url='myawesomeblog.com', action='get_recent_posts') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How to create a successful mobile app?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'ask_my_first_million_podcast_chatbot', 'MixerBox_OnePlayer_music', 'Tarot', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='How to create a successful mobile app?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What symptoms are associated with Parkinson's disease?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'AeroDex', 'lawyer_lookup', 'monarch', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #CallAPI# monarch(search_term='Parkinson Disease', search_type='disease_symptoms') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you tell me about my cosmic DNA? Born on May 30, 1960, 1:00 PM in Los Angeles, CA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'Shop_AIssistant', 'Coupert', 'Astrology', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# Astrology(birth_year=1960, birth_month=5, birth_day=30, birth_time='1:00 PM', birth_location='Los Angeles, CA') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find information on recent legal changes regarding climate change."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'For_io', 'fiscalnote', 'timenavi', 'PlaylistAI_for_Spotify'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'} #CallAPI# fiscalnote(dataType='legal', keyword='climate change') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I use Directual for scaling my existing web3 app significantly?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'bgg_assistant', 'AeroDex', 'uk_politics', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #CallAPI# directual(action='scale', appType='web3', complexity='any', scale='large') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need detailed information about solar energy technologies."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'smarter_contracts', 'StockData', 'scholarai', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #CallAPI# scholarai(query='solar energy technologies', detail_level='full_text', zotero_user_id='user_321', zotero_api_key='api_key_321') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is NASA's APOD for March 25, 2019?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'charity', 'vafl', 'Tarot', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# astrodaily(action='daily', date='2019-03-25') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please present the current statistics for the Solana blockchain."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'defillama', 'WPressGenie', 'sleek_choice', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# defillama(protocol='Solana', data_type='current') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Suggest a trip from Los Angeles to Tokyo on 5th July, coming back on 12th July with a maximum budget of $2500."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Astrology', 'ixigo_trip_planner', 'clearbit_integration', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# ixigo_trip_planner(origin_city='Los Angeles',destination_city='Tokyo', departure_date='2021-07-05', return_date='2021-07-12', budget=2500) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get me the best deals on Adidas products"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'CreditYelp', 'MixerBox_OnePlayer_music', 'Coupert', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# Coupert(query='best deals', store='Adidas', numOfCoupons=4) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get details on Amazon's website traffic"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'Astrology', 'three_sentence_service', 'clearbit_integration', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# clearbit_integration(query_type='reveal', search_term='Amazon') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you guide me through solving this quadratic equation: x^2 + 3x - 4 = 0?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'ixigo_trip_planner', 'tutory', 'AI2sql', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# tutory(mode='socratic_tutor', subject='math', topic='quadratic_equations', user_query='Can you guide me through solving this quadratic equation: x^2 + 3x - 4 = 0?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a Drake meme with 'Using ChatGPT' and 'Not using ChatGPT'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'open_prompt_library', 'ixigo_trip_planner', 'PlaylistAI_for_Spotify', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# MemeGenerator(template='Drake', text1='Using ChatGPT', text2='Not using ChatGPT') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm going to pick number 4, what does the fortune cookie say?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'aiAgents', 'sleek_choice', 'AI2sql', 'talkwithdocs'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'} #CallAPI# fortunecookie(user_number=4, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the aviation weather at JFK airport"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'trambellir_treatments', 'MLPaperReader', 'scholarai', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# AeroDex(call_type='weather', station_id='JFK', document_name='') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How has Berkshire Hathaway (BRK.A) been performing statistically in the last 3 months?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'smarter_contracts', 'ixigo_trip_planner', 'Austrian_Bank_Rates', 'StockData'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"} #CallAPI# StockData(symbol='BRK.A', content='statistical', period='3m') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get information about genes related to the BRCA1 protein."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'monarch', 'Shop_AIssistant', 'hackit_web_scanner', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# monarch(search_term='BRCA1', search_type='gene_info') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide information about successful startups and their growth strategies."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'revelo_talent_finder', 'remarkable_people_podcast_spext', 'consensus_search', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #CallAPI# remarkable_people_podcast_spext(search_query='startups growth strategies', episode_limit=3, sort_by='popularity', time_range='past_six_months') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does Guy Kawasaki recommend to improve one's public speaking skills?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'astrodaily', 'talkwithdocs', 'timenavi', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# remarkable_people_podcast_spext(search_query='public speaking skills', episode_limit=1, sort_by='relevance', time_range='all_time') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me the best coupons for Amazon"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'giftwrap', 'Coupert', 'html_css_japanese_stroke_viewer', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# Coupert(query='best coupons', store='Amazon', numOfCoupons=3) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to know the clinical trials for cardiovascular diseases in Germany that started after March 1, 2020"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'StockData', 'ixigo_trip_planner', 'mytomorrows_clinical_trial_search', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# mytomorrows_clinical_trial_search(condition='cardiovascular diseases', location='Germany', start_date='2020-03-01') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me the total time spent in webinars in January 2022."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'CTCP', 'timenavi', 'trambellir_treatments', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #CallAPI# timenavi(action='calculate_time', user_id=1, start_time='2022-01-01T00:00:00', end_time='2022-01-31T23:59:59', category='webinar') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to know the eligibility criteria for the clinical trial NCT05859269."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'contentifyMarketingAI', 'DobaWorldFactory', 'StockData', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# CTCP(nctid='NCT05859269') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide the quarterly fundamental data for Tesla (TSLA)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'trambellir_treatments', 'consensus_search', 'StockData', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #CallAPI# StockData(symbol='TSLA', content='fundamental', period='3m') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the latest advancements in artificial intelligence."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'consensus_search', 'scholarai', 'paperchat', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# scholarai(query='latest advancements artificial intelligence', detail_level='abstract', zotero_user_id='user_789', zotero_api_key='api_key_789') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for a front-end developer adept in React and willing to work in New York"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'ixigo_trip_planner', 'MemeGenerator', 'avian', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# revelo_talent_finder(job_position='Front-End Developer', skills=['React'], location='New York') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Shorten my link and customize it with the keyword 'promotion': https://www.mystore.com/promo"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'PEForNFTs', 'ixigo_trip_planner', 'hadith', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# quick_url(action='shorten', link='https://www.mystore.com/promo', optional_args={'keyword': 'promotion'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find food processing equipment manufacturers in Oceania."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'PEForNFTs', 'contentifyMarketingAI', 'CreditYelp', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# DobaWorldFactory(product_query='food processing equipment', trade_region='Oceania') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please find the estimated impressions for 'meditation' on Android devices in India."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'PHITURE', 'talkfpl', 'hadith', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# PHITURE(keyword='meditation', platform='Android', region='IN') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a top 100 hip-hop songs playlist from the 2000s."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'WPressGenie', 'talkfpl', 'remarkable_people_podcast_spext', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# WhizList(genre='hip-hop', mood=None, decade='2000s', length=100, popularity='top') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide the current aviation weather for Orlando International Airport"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'CMoneyPortfolio', 'AeroDex', 'serviceCheck', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# AeroDex(call_type='weather', station_id='MCO', document_name='') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please give me insights on my astrological profile. I was born October 20, 1972, 5:00 AM in Amsterdam, Netherlands."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'smarter_contracts', 'consensus_search', 'CMoneyPortfolio', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# Astrology(birth_year=1972, birth_month=10, birth_day=20, birth_time='5:00 AM', birth_location='Amsterdam, Netherlands') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Present the parameters regarding clinical trial NCT04675312."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'Tarot', 'voiceover', 'Rogo', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# CTCP(nctid='NCT04675312') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find data on Feeding America and their work."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'CreditYelp', 'StockData', 'Astrology', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# charity(name='Feeding America') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the conclusion in the .epub book?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'talkwithdocs', 'monarch', 'For_io', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# talkwithdocs(file_path='book.epub', query='What is the conclusion of the book?', file_type='.epub') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Design a workout routine for beginners aiming to improve strength"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'lawyer_lookup', 'avian', 'giftwrap', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# aiAgents(userDescription='Achievers through AI synergy', chatGPTDescription='AI teamwork for superior solutions', query='Beginner workout routine to improve strength') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me find a spa day package for my parents' anniversary in Toronto."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'booktickets', 'form', 'quick_url', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #CallAPI# vafl(endpoint='/query', description='spa day package, parents, anniversary', location='Toronto') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give a brief summary of the book 'To Kill a Mockingbird'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'scholarai', 'CMoneyPortfolio', 'sleek_choice', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #CallAPI# aiAgents(userDescription='Harnessing combined AI intellect', chatGPTDescription='Leverage AI collaboration for better summaries', query='Summary of To Kill a Mockingbird') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a to-do app with user authentication and a tasks table."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'giftwrap', 'paperchat', 'bgg_assistant', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #CallAPI# For_io(task='create_app', schema={'tables': ['tasks'], 'authentication': 'user'}, requirements='to-do app') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to tailor my resume for a specific position."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'CLevelResume', 'CreditYelp', 'clearbit_integration', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #CallAPI# CLevelResume(tailor_position=True, job_url='', job_details={}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me the recent clinical trials in Asia for autism spectrum disorder"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'lawyer_lookup', 'mytomorrows_clinical_trial_search', 'smarter_contracts', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# mytomorrows_clinical_trial_search(condition='autism spectrum disorder', location='Asia') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the distribution of programming languages among the top 100 repositories?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'Persona', 'CMoneyPortfolio', 'contentifyMarketingAI', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# Rogo(query='distribution programming languages top 100 repositories', result_format='table', chart_image=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me prompts on the topic of 'Mental Health'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'serviceCheck', 'mytomorrows_clinical_trial_search', 'Astrology', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# open_prompt_library(search_type='similarity', query='Mental Health') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does the service 'Weekend_Plans' consist of?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'university_lecture_retrieval', 'three_sentence_service', 'MLPaperReader', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# three_sentence_service(action='view', service_name='Weekend_Plans') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What gift should I get for my boss' promotion?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'AgentSQL', 'MLPaperReader', 'html_css_japanese_stroke_viewer', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #CallAPI# giftwrap(occasion='promotion', recipient='boss', relationship='work') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the main factors contributing to deforestation."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'avian', 'revelo_talent_finder', 'consensus_search', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# consensus_search(query='List the main factors contributing to deforestation', num_results=8, sort_by='relevance', include_claims=True, include_papers=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can I launch a simple web3 app using Directual with minimal features?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'directual', 'CLevelResume', 'CTCP', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# directual(action='launch', appType='web3', complexity='simple', scale='small') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Montrez-moi comment faire un Negroni, s'il vous plaît!"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'drink_maestro', 'search', 'clearbit_integration', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# drink_maestro(drink_name='Negroni', language='fr', pun_jokes=True, emojis=True, translate_to='en') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm looking for running shoes below $100."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'drink_maestro', 'aiAgents', 'monarch', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# Shop_AIssistant(product='running shoes', max_price=100) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please add a new service called 'Good_Morning' with the following sentences: 'Wake up', 'Brush your teeth', 'Have your breakfast'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'monarch', 'revelo_talent_finder', 'vafl', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# three_sentence_service(action='add', service_name='Good_Morning', sentences=['Wake up', 'Brush your teeth', 'Have your breakfast']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Produce an assessment on history facts for my students"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'DobaWorldFactory', 'mytomorrows_clinical_trial_search', 'form', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='quiz', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for board games related to 'pirates'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'CLevelResume', 'booktickets', 'voiceover', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# bgg_assistant(endpoint='search', search='pirates') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see historical data for the SushiSwap protocol between February 1st and February 15th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'CTCP', 'Shop_AIssistant', 'timenavi', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# defillama(protocol='SushiSwap', data_type='historical', start_date='2022-02-01', end_date='2022-02-15') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to pick number 3 for my fortune today."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'talkwithdocs', 'CTCP', 'fortunecookie', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# fortunecookie(user_number=3, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm in the mood for some relaxing jazz music"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'Coupert', 'contentifyMarketingAI', 'MixerBox_OnePlayer_music', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# MixerBox_OnePlayer_music(search='playlist', category='mood', mood='relax', genre='jazz') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you find an employment attorney in San Jose that speaks Arabic?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'WPressGenie', 'PEForNFTs', 'lawyer_lookup', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# lawyer_lookup(specialty='employment', language='Arabic', city='San Jose') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the top-rated smartwatches and their medium summarized reviews?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'university_lecture_retrieval', 'shopbest', 'giftwrap', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# shopbest(product_category='smartwatches', review_length=2, sort_by='rating', limit=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Translate the content of this Chinese webpage to English: https://www.example.com/zh"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'CTCP', 'AaronBrowser', 'talkfpl', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# AaronBrowser(url='https://www.example.com/zh', action='translate', language='en') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Locate sustainable packaging suppliers in the North American region."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'drink_maestro', 'DobaWorldFactory', 'avian', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #CallAPI# DobaWorldFactory(product_query='sustainable packaging', trade_region='North America') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the symptoms of Cystic Fibrosis?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'defillama', 'StockData', 'ask_my_first_million_podcast_chatbot', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #CallAPI# monarch(search_term='Cystic Fibrosis', search_type='disease_symptoms') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Add 'Coffee_Break' service with the sentences 'Make coffee', 'Take a 5-minute break', 'Enjoy your coffee'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'three_sentence_service', 'contentifyMarketingAI', 'ask_my_first_million_podcast_chatbot', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# three_sentence_service(action='add', service_name='Coffee_Break', sentences=['Make coffee', 'Take a 5-minute break', 'Enjoy your coffee']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are some charities in the healthcare sector based in Boston?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'charity', 'Coupert', 'astrodaily', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# charity(city='Boston', category='healthcare') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I be a better entrepreneur?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'Xpapers_arXiv_paper_database', 'paperchat', 'remarkable_people_podcast_spext', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# remarkable_people_podcast_spext(search_query='better entrepreneur', episode_limit=5, sort_by='relevance', time_range='all_time') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you show me the output of CellD4 from my SQL notebook with file_id as 12345xyz"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'AaronBrowser', 'CTCP', 'quick_url', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #CallAPI# noteable(task='view_output', file_id='12345xyz', cell_id='CellD4') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show the dividend payout history for Delta Electronics during the last 3 years."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'drink_maestro', 'clearbit_integration', 'booktickets', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #CallAPI# CMoneyPortfolio(stockName='Delta Electronics', queryType='DividendPayout', startDate='2019-01-01', endDate='2022-01-17') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need to plan a trip from New York to Paris on 15th June returning on 25th June. I have a budget of $2000."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'search', 'ixigo_trip_planner', 'For_io', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# ixigo_trip_planner(origin_city='New York', destination_city='Paris', departure_date='2021-06-15', return_date='2021-06-25', budget=2000) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to find a cooking class for my mom in San Francisco. She's really into Italian cuisine."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'kiwicom_assistant_and_flights_search', 'converter_app', 'vafl', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #CallAPI# vafl(endpoint='/query', description='cooking class, mom, Italian cuisine', location='San Francisco') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Describe the functions available on the smart contract 0xABCDEF123456789 on Ethereum."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'smarter_contracts', 'sleek_choice', 'Austrian_Bank_Rates', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #CallAPI# smarter_contracts(network='Ethereum', contract_address='0xABCDEF123456789', query_type='functions_description') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does my birth chart say about me? I was born February 17, 1985, at 8:30 PM in London, UK."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'quick_url', 'shopbest', 'paperchat', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# Astrology(birth_year=1985, birth_month=2, birth_day=17, birth_time='8:30 PM', birth_location='London, UK') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you tailor my resume to a COO position in healthcare without a specific job listing?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'ixigo_trip_planner', 'html_css_japanese_stroke_viewer', 'monarch', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #CallAPI# CLevelResume(tailor_position=True, job_url='', job_details={'job_title': 'COO', 'industry': 'healthcare'}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many open-source repositories have 5000 or more stars?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'scholarai', 'serviceCheck', 'Rogo', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #CallAPI# Rogo(query='repositories 5000 or more stars', result_format='table', chart_image=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me find a paper on implementing reinforcement learning for financial trading."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'paperchat', 'Rogo', 'consensus_search', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# paperchat(query='reinforcement learning financial trading', max_results=1, search_fields='title,abstract') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me find the best 4K TV under £800"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'booktickets', 'sleek_choice', 'smarter_contracts', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #CallAPI# sleek_choice(category='4K TV', budget_min=0, budget_max=800, currency='GBP') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to discover some new board games with a sci-fi theme"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['contentifyMarketingAI', 'fortunecookie', 'monarch', 'astrodaily', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# bgg_assistant(endpoint='search', search='sci-fi') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me come up with a poll for my school's favorite movie"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'StockData', 'open_prompt_library', 'form', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='poll', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need performance marketing links for the product web pages"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'ad4mat', 'hackit_web_scanner', 'Shop_AIssistant', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# ad4mat(api_key='your_api_key', user_id=321, site_id=654, product_urls=['https://shop.com/tech1', 'https://shop.com/tech2']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the withdrawal limits on a Volksbank checking account?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'Austrian_Bank_Rates', 'Shop_AIssistant', 'PlaylistAI_for_Spotify', 'PHITURE'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'} #CallAPI# Austrian_Bank_Rates(bank_name='Volksbank', product_type='checking', detail='withdrawal_limits') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "We need an iOS developer with Swift expertise and at least 4 years of experience"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'astrodaily', 'WPressGenie', 'revelo_talent_finder', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #CallAPI# revelo_talent_finder(job_position='iOS Developer', experience=4, skills=['Swift']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to read the Instrument Flying Handbook"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'remarkable_people_podcast_spext', 'contentifyMarketingAI', 'Shop_AIssistant', 'CreditYelp'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'} #CallAPI# AeroDex(call_type='document', station_id='', document_name='Instrument Flying Handbook') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for money-saving offers on Nike items"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'Chainstack', 'ad4mat', 'Coupert', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# Coupert(query='money-saving offers', store='Nike', numOfCoupons=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Assemble a playlist on Spotify with the song names generated by ChatGPT"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'search', 'PlaylistAI_for_Spotify', 'booktickets', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# PlaylistAI_for_Spotify(song_list=song_list_from_chatgpt, user_id=current_user, access_token=user_api_token) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do probiotics affect gut flora?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'uk_politics', 'ask_my_first_million_podcast_chatbot', 'DobaWorldFactory', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #CallAPI# consensus_search(query='How do probiotics affect gut flora?', num_results=10, sort_by='relevance', include_claims=True, include_papers=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the most used prompts of all time"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'PHITURE', 'ixigo_trip_planner', 'three_sentence_service', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# open_prompt_library(search_type='top_prompts', time_frame='alltime') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me top-ranked cooperative games"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'vafl', 'Persona', 'consensus_search', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# bgg_assistant(endpoint='category', category='cooperative', num_results=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "In the .csv file, list the products with sales above 500 units."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'defillama', 'PEForNFTs', 'talkwithdocs', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# talkwithdocs(file_path='product_sales.csv', query='List the products with sales above 500 units.', file_type='.csv') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Analyze my birth chart. I came into this world on January 15, 2002 at 11:50 PM in Rio de Janeiro, Brazil."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'WPressGenie', 'Astrology', 'three_sentence_service', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# Astrology(birth_year=2002, birth_month=1, birth_day=15, birth_time='11:50 PM', birth_location='Rio de Janeiro, Brazil') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the Conservative party's stance on immigration?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'uk_politics', 'Coupert', 'smarter_contracts', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #CallAPI# uk_politics(search_term='immigration', document_type='manifesto', party='Conservative') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain basic principles of organic chemistry."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'bgg_assistant', 'Persona', 'Rogo', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# university_lecture_retrieval(search_terms='organic chemistry basic principles', course_subject='chemistry', result_limit=2) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the most frequently used licenses in the top 500 repositories."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'monarch', 'sleek_choice', 'Rogo', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# Rogo(query='most frequently used licenses top 500 repositories', result_format='table', chart_image=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve posts of the 'news' category on my site located at newsite.com."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'contentifyMarketingAI', 'WhizList', 'bgg_assistant', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# WPressGenie(site_url='newsite.com', action='get_posts_by_category', category='news') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you make a robotic AI voice say 'Initiating system reboot...'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'defillama', 'kiwicom_assistant_and_flights_search', 'Coupert', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #CallAPI# voiceover(text='Initiating system reboot...', voice_type='Robotic', speed=1.0, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify top 10 SaaS companies in New York"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'DobaWorldFactory', 'bgg_assistant', 'voiceover', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# clearbit_integration(query_type='prospecting', search_term='SaaS', additional_params={'location': 'New York', 'count': 10}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need to know the trend of 'photo editor' keyword in the Canadian iOS App Store."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'MemeGenerator', 'fortunecookie', 'PHITURE', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# PHITURE(keyword='photo editor', platform='iOS', region='CA') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you create a custom meme with my image URL and the text 'Hello ChatGPT'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'MemeGenerator', 'clearbit_integration', 'trambellir_treatments', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# MemeGenerator(template='Custom', text1='Hello ChatGPT', image_url='https://example.com/user-image.jpg') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve Advisory Circular AC 00-6 for weather interpretation"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'AI2sql', 'clearbit_integration', 'quick_url', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# AeroDex(call_type='document', station_id='', document_name='AC 00-6') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the impact of climate change on agricultural productivity?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'ad4mat', 'consensus_search', 'For_io', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #CallAPI# consensus_search(query='What is the impact of climate change on agricultural productivity?', num_results=5, sort_by='relevance', include_claims=True, include_papers=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you provide hadiths on the rights of parents?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CreditYelp', 'consensus_search', 'ixigo_trip_planner', 'hadith', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# hadith(topic='parents rights', max_results=5, search_type='context') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What steps can I take to find balance in my life?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'AaronBrowser', 'MemeGenerator', 'fiscalnote', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# Tarot(inquiry='find balance in life', user_id=7) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "It's my best friend's graduation, what gift could I give?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'mytomorrows_clinical_trial_search', 'giftwrap', 'Austrian_Bank_Rates', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #CallAPI# giftwrap(occasion='graduation', recipient='best friend', relationship='friend') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Are there any family law attorneys in San Francisco capable of speaking Hindi?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'giftwrap', 'AgentSQL', 'MLPaperReader', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# lawyer_lookup(specialty='family law', language='Hindi', city='San Francisco') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me an in-depth overview of CRISPR gene-editing technique studies."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'ad4mat', 'scholarai', 'AgentSQL', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# scholarai(query='CRISPR gene-editing technique', detail_level='full_text', zotero_user_id='user_456', zotero_api_key='api_key_456') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Translate this English text to French: 'Hello, world!'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'directual', 'WPressGenie', 'uk_politics', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# aiAgents(userDescription='One goal, limitless productivity', chatGPTDescription='Collaborate with another AI Agent to perform the goal more efficient', query='Translate English to French: Hello, world!') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a concise summary of recent research on vaccines for COVID-19."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'hadith', 'directual', 'three_sentence_service', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# scholarai(query='COVID-19 vaccines research', detail_level='abstract', zotero_user_id='user_951', zotero_api_key='api_key_951') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Draft a poll to decide the best food item in our college cafeteria"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'university_lecture_retrieval', 'revelo_talent_finder', 'MemeGenerator', 'uk_politics'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='poll', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to see pictures of the Milky Way from NASA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CreditYelp', 'MLPaperReader', 'uk_politics', 'astrodaily', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# astrodaily(action='search', query='Milky Way') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the proper way to write the kanji '猫'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'astrodaily', 'StockData', 'html_css_japanese_stroke_viewer', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# html_css_japanese_stroke_viewer(character='猫', step_by_step=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get token balance of wallet 0x5579e9e30ac7d8983c38a3d93d42af978db48b85 for ERC20 token contract address 0x27acb25b1064f2e2e40e5a76196946edd074b76d."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'scholarai', 'Chainstack', 'clearbit_integration', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #CallAPI# Chainstack(operation='get_token_balance', blockchain_type='ethereum', contract_address='0x27acb25b1064f2e2e40e5a76196946edd074b76d', data='0x5579e9e30ac7d8983c38a3d93d42af978db48b85') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I correctly write the character '月'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'talkwithdocs', 'PEForNFTs', 'html_css_japanese_stroke_viewer', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# html_css_japanese_stroke_viewer(character='月', step_by_step=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to attend a dance performance in Rome, Italy, on December 12th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'noteable', 'hadith', 'sleek_choice', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #CallAPI# booktickets(location='Rome', date_start='2022-12-12', date_end='2022-12-12', event_type='dance') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me everything about launching a product in crowded market."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'PEForNFTs', 'ask_my_first_million_podcast_chatbot', 'Shop_AIssistant', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='Tell me everything about launching a product in crowded market.') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me delete the cell (U3) containing incorrect code from my SQL notebook (file_id: ijkl5678)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'astrodaily', 'noteable', 'aiAgents', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# noteable(task='delete_cell', file_id='ijkl5678', cell_id='U3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me flights with layovers no longer than 3 hours from Sydney to Cape Town on the 5th of March."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'drink_maestro', 'kiwicom_assistant_and_flights_search', 'paperchat', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #CallAPI# kiwicom_assistant_and_flights_search(origin='Sydney', destination='Cape Town', departure_date='5th March', maxlength=180) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Look up recent publications about deep learning in healthcare."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'For_io', 'talkfpl', 'paperchat', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #CallAPI# paperchat(query='deep learning in healthcare', max_results=3, search_fields='title,abstract,date') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I have a $3,500 credit card balance with an 18% interest rate, and I'd like to pay it off in 2 years. How much should my monthly payments be?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'directual', 'defillama', 'CreditYelp', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #CallAPI# CreditYelp(loan_type='credit_card', principal=3500, interest_rate=18, loan_duration=2) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What would be the best transfer options for my team with a budget of 8.5 million?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'talkfpl', 'monarch', 'Tarot', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# talkfpl(action='transfer', team_id=12345, transfer_budget=8.5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need to know the best vegan retreats in Greece"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'AgentSQL', 'CMoneyPortfolio', 'uk_politics', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# trambellir_treatments(search_query='vegan retreats', results_limit=10, location='Greece', sort_by='rating') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Set a meeting with the team at 3:00 PM tomorrow."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'timenavi', 'Chainstack', 'MixerBox_OnePlayer_music', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# timenavi(action='create_event', user_id=1, event_name='Team Meeting', start_time='2022-02-23T15:00:00', category='meeting') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide the search volume of the keyword 'recipe app' on the Brazilian iOS App Store."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'charity', 'PHITURE', 'MemeGenerator', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# PHITURE(keyword='recipe app', platform='iOS', region='BR') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am struggling with a decision about continuing a long-term relationship."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'noteable', 'talkwithdocs', 'PEForNFTs', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# Tarot(inquiry='struggling with a decision about continuing a long-term relationship', user_id=2) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Let's go with number 10 to find out my fortune."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'revelo_talent_finder', 'fortunecookie', 'Rogo', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# fortunecookie(user_number=10, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Insert a new service named 'Study_Tips' having these sentences: 'Set a study goal', 'Get organized', 'Break it down'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'charity', 'search', 'three_sentence_service', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #CallAPI# three_sentence_service(action='add', service_name='Study_Tips', sentences=['Set a study goal', 'Get organized', 'Break it down']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What gift should I get for my mother's birthday?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'serviceCheck', 'Chainstack', 'smarter_contracts', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #CallAPI# giftwrap(occasion='birthday', recipient='mother', relationship='family') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you recommend the top 3 smartphones within €300-500 price range?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'quick_url', 'AeroDex', 'WPressGenie', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# sleek_choice(category='smartphones', budget_min=300, budget_max=500, currency='EUR') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the key details of Apple?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'ixigo_trip_planner', 'uk_politics', 'CTCP', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# clearbit_integration(query_type='enrichment', search_term='Apple') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a furniture manufacturer in Europe."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'DobaWorldFactory', 'charity', 'tutory', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #CallAPI# DobaWorldFactory(product_query='furniture', trade_region='Europe') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I learn 3D design? Are there any courses?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'charity', 'fiscalnote', 'For_io', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# search(query='3D design courses', count=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Implement a ticket booking system with a tickets and a bookings table."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'university_lecture_retrieval', 'For_io', 'CLevelResume', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #CallAPI# For_io(task='create_app', schema={'tables': ['tickets', 'bookings']}, requirements='ticket booking system') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I have this specific job listing I want to apply for: https://www.example.com/jobs/cto. Can you update my resume for it?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'directual', 'CLevelResume', 'booktickets', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# CLevelResume(tailor_position=True, job_url='https://www.example.com/jobs/cto', job_details={}, user_wishes={}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Write a short story about a lost kitten finding its way home"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'AeroDex', 'contentifyMarketingAI', 'fortunecookie', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #CallAPI# aiAgents(userDescription='AIs working in unison for creative success', chatGPTDescription='Combining AI creativity and efficiency', query='Short story: lost kitten finding home') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you guide me with the stroke order of '車'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'AaronBrowser', 'PlaylistAI_for_Spotify', 'html_css_japanese_stroke_viewer', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #CallAPI# html_css_japanese_stroke_viewer(character='車', step_by_step=False) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can I find a list of best couples wellness retreats in Italy?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'trambellir_treatments', 'Coupert', 'search', 'astrodaily'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'} #CallAPI# trambellir_treatments(search_query='couples wellness retreats', results_limit=10, location='Italy', sort_by='rating') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Top 5 headphones with medium review summaries, sorted by price."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'university_lecture_retrieval', 'Austrian_Bank_Rates', 'AI2sql', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #CallAPI# shopbest(product_category='headphones', review_length=2, sort_by='price', limit=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Quiero aprender a hacer un mojito. 😊"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'scholarai', 'Persona', 'hackit_web_scanner', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #CallAPI# drink_maestro(drink_name='mojito', language='es', pun_jokes=True, emojis=True, translate_to='en') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please create a child-like voice saying 'Happy birthday to you!' with a faster speed."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'fortunecookie', 'lawyer_lookup', 'For_io', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# voiceover(text='Happy birthday to you!', voice_type='Child', speed=1.2, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What would my repayment schedule be for a $12,000 student loan with a 4.5% interest rate if I plan to pay it off in 5 years?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'CreditYelp', 'fortunecookie', 'MLPaperReader', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# CreditYelp(loan_type='student', principal=12000, interest_rate=4.5, loan_duration=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you get me the Pilot's Handbook of Aeronautical Knowledge?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'form', 'astrodaily', 'AeroDex', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# AeroDex(call_type='document', station_id='', document_name='Pilots Handbook of Aeronautical Knowledge') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please track the number of hours spent on yoga in February."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'shopbest', 'timenavi', 'paperchat', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #CallAPI# timenavi(action='calculate_time', user_id=1, start_time='2022-02-01T00:00:00', end_time='2022-02-28T23:59:59', category='yoga') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the price to earnings ratio for the CryptoPunks collection?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'Coupert', 'Tarot', 'trambellir_treatments', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #CallAPI# PEForNFTs(collection='CryptoPunks') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Convert this question into audio with an American male AI voice: 'What time does the train leave tonight?'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'Persona', 'voiceover', 'smarter_contracts', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# voiceover(text='What time does the train leave tonight?', voice_type='American_Male', speed=1.0, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Check the aviation weather for Boston Logan International Airport"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'Astrology', 'giftwrap', 'AeroDex', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# AeroDex(call_type='weather', station_id='BOS', document_name='') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What advice would Oprah Winfrey give someone who feels lost in life?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'CLevelResume', 'Persona', 'lawyer_lookup', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #CallAPI# Persona(character_name='Oprah Winfrey', character_trait='inspirational', character_expertise='self-help and motivation') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please generate a playlist using the ChatGPT recommended songs for user 54321"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'PlaylistAI_for_Spotify', 'university_lecture_retrieval', 'Xpapers_arXiv_paper_database', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #CallAPI# PlaylistAI_for_Spotify(song_list=chatgpt_songs, user_id='54321', access_token=user_auth_token) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can I have a conversation with Sherlock Holmes about solving mysteries?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'uk_politics', 'Persona', 'ad4mat', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #CallAPI# Persona(character_name='Sherlock Holmes', character_trait='observant', character_expertise='detective work') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Play a romantic playlist for date night"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'contentifyMarketingAI', 'Persona', 'smarter_contracts', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# MixerBox_OnePlayer_music(search='playlist', category='mood', mood='romance') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's my fortune if I go with number 7?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'CreditYelp', 'AI2sql', 'StockData', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #CallAPI# fortunecookie(user_number=7, metadata_request=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show the average salary of employees by their job titles"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'quick_url', 'MLPaperReader', 'astrodaily', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# AI2sql(natural_text='Show the average salary of employees by their job titles') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please convert the following text into an AI voice with a British accent: 'Welcome to our podcast!'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'voiceover', 'AI2sql', 'paperchat', 'ad4mat'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'} #CallAPI# voiceover(text='Welcome to our podcast!', voice_type='British', speed=1.0, pitch=1.0, output_format='mp3') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me the latest research on machine learning"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'quick_url', 'Xpapers_arXiv_paper_database', 'MLPaperReader', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #CallAPI# Xpapers_arXiv_paper_database(keywords='machine learning', limit=10, show_abstracts=True, show_references=True, show_pdf_urls=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for weight loss programs in Costa Rica"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'aiAgents', 'consensus_search', 'Astrology', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #CallAPI# trambellir_treatments(search_query='weight loss programs', results_limit=10, location='Costa Rica', sort_by='popularity') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a cheap flight from New York to London on 1st December."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'StockData', 'Astrology', 'kiwicom_assistant_and_flights_search', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #CallAPI# kiwicom_assistant_and_flights_search(origin='New York', destination='London', departure_date='1st December') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What kind of yoga retreats can you recommend for my sister near Berlin?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'Coupert', 'paperchat', 'vafl', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# vafl(endpoint='/generate_gift_v2', description='yoga retreats, sister', location='Berlin') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve data on the Ethereum DeFi protocol."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'smarter_contracts', 'AgentSQL', 'lawyer_lookup', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #CallAPI# defillama(protocol='Ethereum', data_type='current') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide me with a list of tech companies in San Francisco."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'AaronBrowser', 'timenavi', 'AeroDex', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# clearbit_integration(query_type='prospecting', search_term='technology', additional_params={'location': 'San Francisco'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to see the latest coupons for eBay"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'mytomorrows_clinical_trial_search', 'Coupert', 'scholarai', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# Coupert(query='latest coupons', store='eBay', numOfCoupons=5) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compare the number of stars for React and Angular repositories."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'lawyer_lookup', 'remarkable_people_podcast_spext', 'ixigo_trip_planner', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# Rogo(query='compare stars React Angular', result_format='table', chart_image=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify top 3 prompts used in the last 24 hours"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'AI2sql', 'AgentSQL', 'search', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #CallAPI# open_prompt_library(search_type='top_prompts', time_frame='day', top_prompts=3) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the most affordable yoga retreats in Thailand?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'uk_politics', 'ad4mat', 'smarter_contracts', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #CallAPI# trambellir_treatments(search_query='yoga retreats', results_limit=10, location='Thailand', sort_by='price') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compare Salah to De Bruyne"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'lawyer_lookup', 'booktickets', 'hackit_web_scanner', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #CallAPI# talkfpl(action='compare', player1='Salah', player2='De Bruyne') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate the repayment schedule for a 3-year personal loan with a principal amount of $10,000 and an interest rate of 5%."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'CreditYelp', 'hadith', 'avian', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# CreditYelp(loan_type='personal', principal=10000, interest_rate=5, loan_duration=3) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need the weekly performance data for Netflix (NFLX)."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'StockData', 'Persona', 'uk_politics', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #CallAPI# StockData(symbol='NFLX', content='performance', period='1w') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Change video resolution of the video on this website"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'hadith', 'CTCP', 'StockData', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #CallAPI# converter_app(action='change_resolution', input_url='http://video.com/sample.mp4', input_format='MP4', output_format='MP4', additional_params={'resolution': '720p'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the fees associated with Bank Austria's savings account."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'Austrian_Bank_Rates', 'remarkable_people_podcast_spext', 'tutory', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# Austrian_Bank_Rates(bank_name='Bank Austria', product_type='savings', detail='fees') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to analyze Microsoft (MSFT) stock's risk data for the past month."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'consensus_search', 'AeroDex', 'StockData', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# StockData(symbol='MSFT', content='risk', period='1m') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a great gaming laptop for under £1500, any suggestions?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'sleek_choice', 'talkfpl', 'tutory', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #CallAPI# sleek_choice(category='gaming laptop', budget_min=0, budget_max=1500, currency='GBP') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I go about improving my current web application using Directual's no-code platform?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'MemeGenerator', 'tutory', 'directual', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #CallAPI# directual(action='improve', appType='web', complexity='any', scale='any') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Scan example.com for vulnerabilities with a depth of 3 pages."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'MemeGenerator', 'hackit_web_scanner', 'ixigo_trip_planner', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# hackit_web_scanner(url='example.com', depth=3, user_agent='Mozilla/5.0', scan_type='vulnerabilities') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Check the website loading time for example.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'bgg_assistant', 'serviceCheck', 'Chainstack', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #CallAPI# serviceCheck(serviceType='CheckHttp', host='example.com') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the details for lawyer James Johnson in Oakland"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'kiwicom_assistant_and_flights_search', 'scholarai', 'Tarot', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #CallAPI# lawyer_lookup(name='James Johnson', city='Oakland') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the top 10 products with highest sales in the products table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'lawyer_lookup', 'CTCP', 'vafl', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# AgentSQL(dataSource='snowflake', database='myDatabase', tableName='products', query='SELECT product_id, product_name, sales FROM \"myDatabase\".\"products\".\"products\" ORDER BY sales DESC LIMIT 10;') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List some diseases that involve memory loss."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'avian', 'monarch', 'WPressGenie', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #CallAPI# monarch(search_term='memory loss', search_type='phenotype_diseases') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me understand the criteria for trial NCT02569876."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'directual', 'contentifyMarketingAI', 'CTCP', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# CTCP(nctid='NCT02569876') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find DevOps engineers with experience in AWS and Docker located in Chicago"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'revelo_talent_finder', 'serviceCheck', 'sleek_choice', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #CallAPI# revelo_talent_finder(job_position='DevOps Engineer', skills=['AWS', 'Docker'], location='Chicago') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me the most popular prompt of the month?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'timenavi', 'converter_app', 'defillama', 'talkwithdocs'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'} #CallAPI# open_prompt_library(search_type='top_prompts', time_frame='month', top_prompts=1) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How to build better relationships in professional and personal life?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'hadith', 'directual', 'vafl', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #CallAPI# remarkable_people_podcast_spext(search_query='building better relationships', episode_limit=4, sort_by='popularity', time_range='all_time') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Design a form to collect customer data for a marketing campaign"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'form', 'trambellir_treatments', 'charity', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #CallAPI# form(tool='form', user_description='Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', chatgpt_description='Plugin to create Forms, Surveys, Quizzes, or Questionnaires (and their respective questions) on Yay! Forms and return an URL to import the form into the customer's Yay! Forms account.', form_type='custom_form', questions=None) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show financial ratios for Foxconn Technology Group in 2021."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'defillama', 'aiAgents', 'ixigo_trip_planner', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #CallAPI# CMoneyPortfolio(stockName='Foxconn', queryType='FinancialRatios', startDate='2021-01-01', endDate='2021-12-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a recent speech by Nicola Sturgeon regarding Scotland's independence."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'remarkable_people_podcast_spext', 'CTCP', 'three_sentence_service', 'astrodaily'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'} #CallAPI# uk_politics(search_term='Scotland independence', document_type='speech', politician='Nicola Sturgeon') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I validate a business idea?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'lawyer_lookup', 'ask_my_first_million_podcast_chatbot', 'AgentSQL', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='How do I validate a business idea?') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide updates on the most recent 7 political happenings related to immigration reform."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'fiscalnote', 'serviceCheck', 'monarch', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #CallAPI# fiscalnote(dataType='political news', keyword='immigration reform', limit=7) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Outline a basic budget plan for a small startup company"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'aiAgents', 'MixerBox_OnePlayer_music', 'sleek_choice', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #CallAPI# aiAgents(userDescription='Unlock the power of AI collaboration for diverse applications', chatGPTDescription='Join forces with AI for optimum efficiency', query='Basic budget plan for a small startup') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you run the entire Jupyter notebook containing an analysis of flight data (file_id: opqr4321)?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'vafl', 'paperchat', 'noteable', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #CallAPI# noteable(task='run_notebook', file_id='opqr4321') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm feeling uncertain about my career path. Can the cards give me guidance?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'contentifyMarketingAI', 'converter_app', 'booktickets', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #CallAPI# Tarot(inquiry='uncertain about my career path', user_id=1) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Transfer 100 tokens from wallet A to wallet B for the ERC20 token with contract address 0x1abc25789cde123a0349f41e."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'Tarot', 'ixigo_trip_planner', 'shopbest', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #CallAPI# Chainstack(operation='transfer_tokens', blockchain_type='ethereum', contract_address='0x1abc25789cde123a0349f41e', data='wallet_A,wallet_B,100') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the detailed profile of NFT with contract address 0xFEDCBA987654321 on Ethereum network."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'smarter_contracts', 'Xpapers_arXiv_paper_database', 'mytomorrows_clinical_trial_search', 'uk_politics'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'} #CallAPI# smarter_contracts(network='Ethereum', contract_address='0xFEDCBA987654321', query_type='nft_profile') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Add an additional table for reviews to an existing movie database app."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Xpapers_arXiv_paper_database', 'hadith', 'form', 'For_io', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #CallAPI# For_io(task='update_app', schema={'tables': ['reviews']}, requirements='movie database app') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Discuss future trends in technology."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'Tarot', 'ask_my_first_million_podcast_chatbot', 'timenavi', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #CallAPI# ask_my_first_million_podcast_chatbot(question='Discuss future trends in technology.') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need help understanding the theory of supply and demand"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'ask_my_first_million_podcast_chatbot', 'AeroDex', 'serviceCheck', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #CallAPI# tutory(mode='engaging_teacher', subject='economics', topic='supply_demand', user_query='I need help understanding the theory of supply and demand') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get me the click statistics of this link: http://quicku.rl/abcde"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'Xpapers_arXiv_paper_database', 'CMoneyPortfolio', 'quick_url', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #CallAPI# quick_url(action='stats', link='http://quicku.rl/abcde', optional_args={'type': 'clicks'}) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find software engineers with 3 years of experience and Python skills"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'talkwithdocs', 'serviceCheck', 'Tarot', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #CallAPI# revelo_talent_finder(job_position='Software Engineer', experience=3, skills=['Python']) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me some research on image segmentation using deep learning?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'kiwicom_assistant_and_flights_search', 'voiceover', 'MLPaperReader', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #CallAPI# MLPaperReader(topic='image segmentation', question='deep learning', max_results=10) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you fetch information for some articles about deep learning?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'search', 'aiAgents', 'booktickets', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #CallAPI# Xpapers_arXiv_paper_database(keywords='deep learning', limit=7, show_abstracts=True, show_references=False, show_pdf_urls=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the applications of CRISPR gene-editing technology?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'PEForNFTs', 'Shop_AIssistant', 'ixigo_trip_planner', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #CallAPI# consensus_search(query='What are the applications of CRISPR gene-editing technology?', num_results=10, sort_by='relevance', include_claims=True, include_papers=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Investigate the 2021 price-to-earnings ratio for Chunghwa Telecom."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'CMoneyPortfolio', 'noteable', 'aiAgents', 'PHITURE'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'} #CallAPI# CMoneyPortfolio(stockName='Chunghwa Telecom', queryType='PriceToEarnings', startDate='2021-01-01', endDate='2021-12-31') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the recent publications on quantum computing?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Xpapers_arXiv_paper_database', 'drink_maestro', 'clearbit_integration', 'AeroDex', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #CallAPI# Xpapers_arXiv_paper_database(keywords='quantum computing', limit=5, show_abstracts=True, show_references=False, show_pdf_urls=True) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'm feeling lost and need guidance on regaining control of my life."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'html_css_japanese_stroke_viewer', 'Tarot', 'contentifyMarketingAI', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #CallAPI# Tarot(inquiry='regaining control of life', user_id=9) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do neurons communicate?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'voiceover', 'contentifyMarketingAI', 'sleek_choice', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #CallAPI# university_lecture_retrieval(search_terms='neurons communication', course_subject='biology', result_limit=3) #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Check if there are any response delays when pinging the host google.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Tarot', 'serviceCheck', 'CLevelResume', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #CallAPI# serviceCheck(serviceType='CheckImcp', host='google.com') #APIResponse#  #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the latest techniques in cancer immunotherapy?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'MLPaperReader', 'Austrian_Bank_Rates', 'AaronBrowser', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me data on Microsoft's website visitors?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'MemeGenerator', 'search', 'defillama', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me find prompts like 'Daily Exercise Routine'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'timenavi', 'fiscalnote', 'CMoneyPortfolio', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Как приготовить русский медвежонок?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'hackit_web_scanner', 'For_io', 'ad4mat', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for motion graphics courses, got any suggestions?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'Shop_AIssistant', 'shopbest', 'noteable', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I would like to apply for a CMO position at a startup, but I couldn't find any job ads. Can you revise my resume accordingly?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'DobaWorldFactory', 'Astrology', 'serviceCheck', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Locate full-stack developers specialized in JavaScript for remote positions"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'serviceCheck', 'shopbest', 'three_sentence_service', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you find a real estate attorney in Long Beach who is proficient in Japanese?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'Persona', 'scholarai', 'shopbest', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the nearest Italian restaurants using this webpage: https://www.example-food.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'booktickets', 'talkfpl', 'serviceCheck', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you compare checking and savings account rates for Erste Bank?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'three_sentence_service', 'quick_url', 'Rogo', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve the top 3 publications on data science"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'serviceCheck', 'timenavi', 'Coupert', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List non-profits in Los Angeles working on environmental issues."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'Xpapers_arXiv_paper_database', 'ad4mat', 'WPressGenie', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch the estimated impressions and trends for the term 'podcast player' in Italy on Google Play."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'three_sentence_service', 'Tarot', 'directual', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the top 10 holders of the token with contract address 0xCBAFED987654321 on Polygon?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'form', 'ad4mat', 'consensus_search', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the projected points for Mo Salah if I captain him this week?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PlaylistAI_for_Spotify', 'fiscalnote', 'Chainstack', 'MixerBox_OnePlayer_music', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a Bluetooth speaker under $50."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'PlaylistAI_for_Spotify', 'kiwicom_assistant_and_flights_search', 'quick_url', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain the Taiwan Semiconductor Manufacturing Company's market capitalization history for the last six months."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'StockData', 'booktickets', 'contentifyMarketingAI', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me an art exhibition in Paris for July 25th to July 28th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'sleek_choice', 'Coupert', 'For_io', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does the digital cookie say if I choose number 8?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'hackit_web_scanner', 'For_io', 'booktickets', 'hadith'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me meditation retreats in California"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'shopbest', 'bgg_assistant', 'html_css_japanese_stroke_viewer', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you recommend a course for learning graphic design?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'three_sentence_service', 'scholarai', 'giftwrap', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me non-profits in New York City focused on education."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'scholarai', 'Chainstack', 'three_sentence_service', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain the concept of attention mechanisms in transformers."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'smarter_contracts', 'remarkable_people_podcast_spext', 'serviceCheck', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain string theory in physics."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'form', 'MLPaperReader', 'revelo_talent_finder', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I find the area of a triangle with given sides a, b, and c?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'charity', 'lawyer_lookup', 'Coupert', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Evaluate the use of keywords on my-blog.com and recommend improvements."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'astrodaily', 'giftwrap', 'talkwithdocs', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Is Directual suitable for launching a large-scale complex web3 application?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'contentifyMarketingAI', 'voiceover', 'MixerBox_OnePlayer_music', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Design a trip from Toronto to Zurich for me. My travel dates are from 1st August to 10th August, and I'd like to spend no more than $3500."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'hadith', 'converter_app', 'CreditYelp', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is a good non-alcoholic drink for kids?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'talkfpl', 'timenavi', 'monarch', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me about the minimum deposit for an Addiko Bank savings account."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'uk_politics', 'DobaWorldFactory', 'PEForNFTs', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide details about Habitat for Humanity in California."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'Persona', 'directual', 'MemeGenerator', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How to open a checking account at Oberbank, and what are their terms?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'ad4mat', 'hackit_web_scanner', 'shopbest', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Should I take a leap of faith and start my own business?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'CLevelResume', 'Austrian_Bank_Rates', 'Persona', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What do hadiths say about the importance of prayer?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'scholarai', 'clearbit_integration', 'WhizList', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List all pages on my WordPress site examplewebsite.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'mytomorrows_clinical_trial_search', 'Tarot', 'AeroDex', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a quiz that tests my students' knowledge on biology"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'PlaylistAI_for_Spotify', 'aiAgents', 'university_lecture_retrieval', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the family events planned for this week."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['monarch', 'voiceover', 'CreditYelp', 'AgentSQL', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to know how I can improve my financial situation."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'PHITURE', 'Austrian_Bank_Rates', 'bgg_assistant', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How much time did I spend on exercise last month?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'fiscalnote', 'contentifyMarketingAI', 'talkwithdocs', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to know the P/E ratio for the Decentraland LAND tokens."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'MLPaperReader', 'shopbest', 'CLevelResume', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What can be done to enhance user engagement on tech-website.net?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'fiscalnote', 'For_io', 'Astrology', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Translate this website to French: https://www.example.com/fr"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'WPressGenie', 'PHITURE', 'Astrology', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Turn this PNG image into a JPEG"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'CreditYelp', 'Shop_AIssistant', 'consensus_search', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me today's NASA APOD image."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'MLPaperReader', 'PHITURE', 'fortunecookie', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find any research on using machine learning for climate change prediction."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'timenavi', 'scholarai', 'astrodaily', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the best clothing factories in the United States?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'ixigo_trip_planner', 'drink_maestro', 'Chainstack', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do Trent Alexander-Arnold's attacking returns compare to other defenders?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'aiAgents', 'quick_url', 'vafl', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the average number of forks for repositories with more than 10,000 stars."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'fiscalnote', 'uk_politics', 'remarkable_people_podcast_spext', 'astrodaily'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me the best interest rate for a savings account in Austrian banks."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PlaylistAI_for_Spotify', 'Astrology', 'directual', 'trambellir_treatments', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the side effects of long-term use of antidepressants?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'vafl', 'Persona', 'timenavi', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List all products with less than 10 items available in stock"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'contentifyMarketingAI', 'kiwicom_assistant_and_flights_search', 'AaronBrowser', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see the conditions for participation in trial NCT01204579."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'WPressGenie', 'giftwrap', 'Xpapers_arXiv_paper_database', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see photos of Jupiter taken by NASA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'noteable', 'Coupert', 'clearbit_integration', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify budget-friendly wellness retreats in Mexico"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'CMoneyPortfolio', 'Tarot', 'smarter_contracts', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please install the pandas library in my project's Python notebook."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'open_prompt_library', 'Rogo', 'timenavi', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you help me plan a trip from Amsterdam to Bangkok? My travel dates are between 15th September and 25th September, and I can spend up to $2000."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'trambellir_treatments', 'PEForNFTs', 'Astrology', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a perfect anniversary gift for my husband."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'StockData', 'talkwithdocs', 'MemeGenerator', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide the current information on the Polygon DeFi protocol."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'three_sentence_service', 'university_lecture_retrieval', 'PEForNFTs', 'Austrian_Bank_Rates'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Check the current balance of contract address 0x1357902468ABCDE on Ethereum."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'consensus_search', 'voiceover', 'quick_url', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Test the e-mail server by sending a helo message for smtp.example.net"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'clearbit_integration', 'university_lecture_retrieval', 'ad4mat', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me about leadership lessons from successful people."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'bgg_assistant', 'form', 'lawyer_lookup', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me a picture of Earth taken by NASA?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'aiAgents', 'AI2sql', 'converter_app', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help generating affiliate links to monetize web traffic for the following products"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'Rogo', 'talkwithdocs', 'shopbest', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you make my resume more appealing for a technology-driven CIO position without being too specific?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'shopbest', 'three_sentence_service', 'CreditYelp', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find possible illnesses related to high blood pressure."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'WhizList', 'consensus_search', 'hadith', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please check the site https://www.datamanagementfirm.com/ for potential phishing threats."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'PEForNFTs', 'CreditYelp', 'AaronBrowser', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What approaches have been used to solve the cold start problem in recommender systems?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'trambellir_treatments', 'paperchat', 'form', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Enlighten me on the P/E ratio for the Sevens NFT collection."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'drink_maestro', 'hackit_web_scanner', 'mytomorrows_clinical_trial_search', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How would Tony Stark explain the basics of Artificial Intelligence?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'monarch', 'quick_url', 'ixigo_trip_planner', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you find coupon codes for Zara?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'Austrian_Bank_Rates', 'CLevelResume', 'MixerBox_OnePlayer_music', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Remove the service 'Night_Routine' from the service list"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'html_css_japanese_stroke_viewer', 'defillama', 'CreditYelp', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the sentences in the 'Fitness_Routine' service?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'remarkable_people_podcast_spext', 'open_prompt_library', 'AaronBrowser', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the popularity and impression count of 'budget planner' on iOS App Store in Germany?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'monarch', 'contentifyMarketingAI', 'paperchat', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List clinical trials related to Alzheimer's disease in New York"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'scholarai', 'talkwithdocs', 'StockData', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a workout playlist with popular rock songs from the 80s."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['kiwicom_assistant_and_flights_search', 'WPressGenie', 'astrodaily', 'Coupert', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a playlist of 40 chill electronic songs for background music while reading."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'directual', 'Astrology', 'Persona', 'CLevelResume'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the political profile of Keir Starmer."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'PlaylistAI_for_Spotify', 'MemeGenerator', 'charity', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Update an existing project management app, include a tasks table."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'talkfpl', 'paperchat', 'bgg_assistant', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I would like to read a speech by Theresa May on Brexit."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'DobaWorldFactory', 'AI2sql', 'voiceover', 'giftwrap'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am considering a $15,000 business loan with an 8% interest rate for 7 years. What would my monthly payments be?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Rogo', 'scholarai', 'charity', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show the top 5 employees with the highest sales figures in the previous quarter"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'kiwicom_assistant_and_flights_search', 'MemeGenerator', 'html_css_japanese_stroke_viewer', 'tutory'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me understand the process of cellular respiration"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'trambellir_treatments', 'remarkable_people_podcast_spext', 'revelo_talent_finder', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the current block number on the Ethereum blockchain."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'AgentSQL', 'Coupert', 'tutory', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How does BERT handle tokenization?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'lawyer_lookup', 'StockData', 'consensus_search', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for movie premieres in Mumbai around November 1st to November 7th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'university_lecture_retrieval', 'CTCP', 'CreditYelp', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you do a malware scan on example.edu?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'StockData', 'talkfpl', 'bgg_assistant', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a round trip from Paris to Rome on the 10th of January and returning on the 20th."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Xpapers_arXiv_paper_database', 'form', 'Astrology', 'Shop_AIssistant', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you recommend any festivals in Berlin happening on October 15-30?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'ixigo_trip_planner', 'bgg_assistant', 'tutory', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide a natal chart analysis for my birth date: August 10, 2000, 9:45 PM, Tokyo, Japan."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'giftwrap', 'scholarai', 'Austrian_Bank_Rates', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me the top-rated fitness trackers with detailed review summaries?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'MLPaperReader', 'smarter_contracts', 'consensus_search', 'AI2sql'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you recommend Christmas gifts for my niece?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'uk_politics', 'Chainstack', 'hackit_web_scanner', 'PHITURE'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me research papers on the topic of machine learning algorithms for natural language processing."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'sleek_choice', 'WhizList', 'monarch', 'contentifyMarketingAI'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the best UI design courses available?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['vafl', 'open_prompt_library', 'WhizList', 'paperchat', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you help me find scuba diving lessons in Miami for my best friend?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'CMoneyPortfolio', 'CTCP', 'tutory', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How do I monetize bulk URLs for my affiliate marketing?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'ask_my_first_million_podcast_chatbot', 'talkwithdocs', 'mytomorrows_clinical_trial_search', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch the price to earnings ratio for the Mutant Ape Yacht Club NFTs."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'Xpapers_arXiv_paper_database', 'StockData', 'tutory', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find a comedy podcast to make me laugh"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'Austrian_Bank_Rates', 'trambellir_treatments', 'lawyer_lookup', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the detailed information for the board game with ID 12345?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'converter_app', 'timenavi', 'giftwrap', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find clinical trials for breast cancer in the US"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'open_prompt_library', 'clearbit_integration', 'charity', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to listen to popular rock songs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'bgg_assistant', 'charity', 'CreditYelp', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the popularity of the keyword 'fitness app' on the US iOS App Store?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'ad4mat', 'MixerBox_OnePlayer_music', 'MLPaperReader', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Execute the three sentences of the 'Healthy_Lunch' service"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'hadith', 'PlaylistAI_for_Spotify', 'vafl', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compare the performance of Harry Kane and Sergio Aguero"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'noteable', 'AI2sql', 'hadith', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Convert 100 USD to Euros"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'shopbest', 'charity', 'WhizList', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide the details of clinical trials for depression launched after January 1, 2021"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'voiceover', 'Tarot', 'serviceCheck', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get me papers related to reinforcement learning without pdf URLs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'search', 'tutory', 'StockData', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compress the video from this web link to reduce its size"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'CTCP', 'university_lecture_retrieval', 'DobaWorldFactory', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the 10 best smartphones with short review summaries, sorted by average customer rating."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'bgg_assistant', 'giftwrap', 'charity', 'MLPaperReader'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for the top ten legal developments in the pharmaceutical sector."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'revelo_talent_finder', 'avian', 'WPressGenie', 'StockData'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the leading pharmaceutical factories in Africa."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'aiAgents', 'contentifyMarketingAI', 'consensus_search', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Make a Change My Mind meme saying 'ChatGPT is the best AI assistant'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'sleek_choice', 'directual', 'converter_app', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Teach me about computer algorithms."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'tutory', 'ad4mat', 'MixerBox_OnePlayer_music', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How much interest will I pay if I take a 30-year mortgage of $200,000 with a 3.5% interest rate?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'tutory', 'form', 'Shop_AIssistant', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the voting record of Boris Johnson on environmental policies."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'three_sentence_service', 'booktickets', 'kiwicom_assistant_and_flights_search', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's a popular drink in Ireland?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'aiAgents', 'CTCP', 'vafl', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Recommend some digital cameras below $500 in the Electronics category."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'tutory', 'directual', 'fiscalnote', 'Astrology'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you find some romantic experiences for me and my partner in Paris?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'fortunecookie', 'monarch', 'MLPaperReader', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Display exclusive investing data for HTC Corporation."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'quick_url', 'AeroDex', 'ixigo_trip_planner', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Play a soundtrack from the TV show 'Stranger Things'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'MLPaperReader', 'hadith', 'Xpapers_arXiv_paper_database', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the total revenue for each month in the revenue table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'Persona', 'Xpapers_arXiv_paper_database', 'mytomorrows_clinical_trial_search', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Make me a Spotify playlist with the songs from ChatGPT"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'WhizList', 'WPressGenie', 'AaronBrowser', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you give me some information about the gene responsible for colorblindness?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'sleek_choice', 'kiwicom_assistant_and_flights_search', 'lawyer_lookup', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Best drink for a cold winter night?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'CMoneyPortfolio', 'three_sentence_service', 'tutory', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please find direct flights from Berlin to Lisbon between $200 and $400 on 15th July."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PHITURE', 'lawyer_lookup', 'ask_my_first_million_podcast_chatbot', 'CreditYelp', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a thumbnail of video at this web address at one-minute mark"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'Astrology', 'ad4mat', 'three_sentence_service', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need the statistics of this shortened link: http://quicku.rl/12345"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'tutory', 'ixigo_trip_planner', 'search', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to learn about work-life balance in entrepreneurship."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'lawyer_lookup', 'Rogo', 'ixigo_trip_planner', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please show me the relative popularity of different dependency managers among open-source repositories."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'MixerBox_OnePlayer_music', 'DobaWorldFactory', 'CTCP', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the inclusion and exclusion criteria of clinical trial NCT03892761."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'Austrian_Bank_Rates', 'converter_app', 'hadith', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "It's my birthday! Give me a fortune for number 5."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'aiAgents', 'bgg_assistant', 'university_lecture_retrieval', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you help me improve my resume while focusing on my achievements related to sales in the fashion industry?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'AeroDex', 'fortunecookie', 'serviceCheck', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Seeking a back-end developer skilled in Ruby on Rails for a remote position"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'avian', 'ask_my_first_million_podcast_chatbot', 'fiscalnote', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please help me monetize these tracking URLs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'drink_maestro', 'Persona', 'noteable', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to make a survey for my website"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'Chainstack', 'revelo_talent_finder', 'giftwrap', 'StockData'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a female AI voice saying 'This is a test.' with a higher pitch and slower speed."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'trambellir_treatments', 'revelo_talent_finder', 'AeroDex', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am interested in reading how the Green Party plans to improve public transportation."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'drink_maestro', 'MemeGenerator', 'Shop_AIssistant', 'PlaylistAI_for_Spotify'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need to locate a medical malpractice lawyer in Bakersfield who speaks German"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'html_css_japanese_stroke_viewer', 'ask_my_first_million_podcast_chatbot', 'WhizList', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What evidence is there for the effectiveness of intermittent fasting for weight loss?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'smarter_contracts', 'Tarot', 'ixigo_trip_planner', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a 30-song playlist with happy indie songs from the 2010s."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'fiscalnote', 'CMoneyPortfolio', 'tutory', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for a high-quality camera within £300-600 price range"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AeroDex', 'hackit_web_scanner', 'Persona', 'ixigo_trip_planner', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide me with advice from hadiths on charity and helping the poor"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'For_io', 'shopbest', 'Xpapers_arXiv_paper_database', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I boost conversion rates on my website sample-site.com?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['avian', 'MLPaperReader', 'MemeGenerator', 'AI2sql', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain the process of photosynthesis in simple terms"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'drink_maestro', 'open_prompt_library', 'hadith', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me hadiths that discuss seeking knowledge"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'tutory', 'AaronBrowser', 'Austrian_Bank_Rates', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the main points covered in the PDF?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'WhizList', 'defillama', 'ad4mat', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the percentage of open-source repositories with different amounts of stars."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'booktickets', 'revelo_talent_finder', 'Xpapers_arXiv_paper_database', 'talkfpl'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Insights on social media marketing from experts interviewed on Guy Kawasaki's Remarkable People Podcast."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'Astrology', 'shopbest', 'WhizList', 'vafl'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please help me learn how to write '学'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AI2sql', 'directual', 'contentifyMarketingAI', 'hadith', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you please make a 50-song classical playlist for studying?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'CMoneyPortfolio', 'trambellir_treatments', 'aiAgents', 'ad4mat'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the top 10 most active JavaScript repositories in the past month."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'shopbest', 'AaronBrowser', 'tutory', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a true crime podcast"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'three_sentence_service', 'Chainstack', 'DobaWorldFactory', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How would Batman handle a hostage situation?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'MLPaperReader', 'revelo_talent_finder', 'timenavi', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you play the latest K-pop releases?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'consensus_search', 'serviceCheck', 'voiceover', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the best affordable vacuum cleaners within a €100-300 price range"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'serviceCheck', 'CTCP', 'avian', 'fiscalnote'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for referral links for the attached list of URLs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'ask_my_first_million_podcast_chatbot', 'WPressGenie', 'search', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch the top 3 latest regulatory updates in the technology sector."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'Xpapers_arXiv_paper_database', 'monarch', 'directual', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide the conditions for participating in clinical trial NCT04102669."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'clearbit_integration', 'bgg_assistant', 'PlaylistAI_for_Spotify', 'WPressGenie'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Develop a playlist on Spotify from the songs generated by ChatGPT for user ID 78901"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'AaronBrowser', 'revelo_talent_finder', 'search', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the top 5 trending board games"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'Tarot', 'AgentSQL', 'CTCP', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please analyze and show the criteria for trial NCT02331211."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'booktickets', 'lawyer_lookup', 'Shop_AIssistant', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Extract images from this PDF file"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'giftwrap', 'monarch', 'consensus_search', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you shorten this URL: https://www.example.com/page and save it under the 'Marketing' category?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'paperchat', 'revelo_talent_finder', 'Austrian_Bank_Rates', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me an APOD image from NASA for August 8, 2020."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'remarkable_people_podcast_spext', 'open_prompt_library', 'fiscalnote', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the latest 5 political news articles about healthcare?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'uk_politics', 'kiwicom_assistant_and_flights_search', 'defillama', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How often is the term 'productivity' searched on the UK Google Play Store?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'AaronBrowser', 'mytomorrows_clinical_trial_search', 'talkfpl', 'PlaylistAI_for_Spotify'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I reduce the bounce rate on my fitness-portal.io?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['open_prompt_library', 'shopbest', 'hadith', 'DobaWorldFactory', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to see the results of the scatterplot in cell B15 from the Python notebook (file_id: stuv9012) that visualizes coffee shop revenue and customer count."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'Rogo', 'contentifyMarketingAI', 'smarter_contracts', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Run the multivariate regression model on the R notebook (file id: efgh1234) in the cell T9."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ad4mat', 'kiwicom_assistant_and_flights_search', 'talkwithdocs', 'drink_maestro', 'uk_politics'], and the introduction and usage of each API is as follows: \n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify the most popular product in each category based on the number of units sold"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'ask_my_first_million_podcast_chatbot', 'drink_maestro', 'giftwrap', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Display the daily price data of Johnson & Johnson (JNJ) for the past 2 weeks."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'avian', 'html_css_japanese_stroke_viewer', 'search', 'defillama'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a meme using the Y U No template, with text 'CHATGPT, Y U NO GENERATE MEMES?'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'hackit_web_scanner', 'booktickets', 'timenavi', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Build a CRM system with contacts, leads, and deals tables."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'form', 'shopbest', 'ask_my_first_million_podcast_chatbot', 'CTCP'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many records are there in the employees table?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'Austrian_Bank_Rates', 'AeroDex', 'PHITURE', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate the price to earnings ratio for Rarible NFTs."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'directual', 'form', 'PlaylistAI_for_Spotify', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are some startup ideas?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'smarter_contracts', 'sleek_choice', 'mytomorrows_clinical_trial_search', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Looking for a weekend getaway for a group of friends, preferably within 3 hours drive from Los Angeles."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'uk_politics', 'Tarot', 'trambellir_treatments', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Compare the efficiency of solar panels and wind turbines for energy production."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'MemeGenerator', 'WPressGenie', 'WhizList', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Assess my e-commerce site shop-online.net and suggest ways to maximize ROI."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'AgentSQL', 'giftwrap', 'consensus_search', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How many new followers did my Instagram account gain in January?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'Rogo', 'open_prompt_library', 'hackit_web_scanner', 'MixerBox_OnePlayer_music'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Play a playlist for a workout session"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'Rogo', 'scholarai', 'Chainstack', 'quick_url'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need electronics manufacturers in North America with return policies."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'lawyer_lookup', 'MemeGenerator', 'converter_app', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to upgrade my existing web app with more features using Directual, can you guide me?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['consensus_search', 'defillama', 'ixigo_trip_planner', 'AgentSQL', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Identify and assess the effectiveness of the call-to-actions on fashion-site.org."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'search', 'voiceover', 'StockData', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get the number of profile views for my Instagram account in the last 60 days."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'directual', 'scholarai', 'MemeGenerator', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Evaluate the website response time for myblog.org"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'Chainstack', 'Austrian_Bank_Rates', 'vafl', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please create a 25-song throwback playlist with the best pop songs from the 70s."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['converter_app', 'shopbest', 'giftwrap', 'PEForNFTs', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me my fortune based on number 9."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'PHITURE', 'charity', 'aiAgents', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How does photosynthesis work?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CMoneyPortfolio', 'MixerBox_OnePlayer_music', 'WhizList', 'Rogo', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Explain the methodology section of the .pdf research article."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ask_my_first_million_podcast_chatbot', 'WhizList', 'timenavi', 'hadith', 'directual'], and the introduction and usage of each API is as follows: \n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the best five tablets with in-depth review summaries, ordered by user rating."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'aiAgents', 'AeroDex', 'ask_my_first_million_podcast_chatbot', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you find a wireless mouse for less than $25?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'MemeGenerator', 'Austrian_Bank_Rates', 'university_lecture_retrieval', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you give me an astrological reading? I was born on July 1, 1977, at 6:00 PM in Sydney, Australia."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'search', 'revelo_talent_finder', 'fiscalnote', 'talkwithdocs'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please list the 6 best power tools with short summarized reviews, sorted by price."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'mytomorrows_clinical_trial_search', 'directual', 'monarch', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the most popular Python repositories?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'Coupert', 'bgg_assistant', 'PlaylistAI_for_Spotify', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the fundamentals of microeconomics?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['timenavi', 'talkfpl', 'avian', 'serviceCheck', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me the content of the service 'Stress_Relief'?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'clearbit_integration', 'Austrian_Bank_Rates', 'noteable', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you create affiliate tracking links for my site's product links?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'scholarai', 'voiceover', 'AeroDex', 'booktickets'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate a 10-year repayment plan for my mortgage of $250,000 with a 3.25% interest rate."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['drink_maestro', 'AaronBrowser', 'giftwrap', 'monarch', 'bgg_assistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the latest advancements in the field of artificial intelligence."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'avian', 'drink_maestro', 'MLPaperReader', 'sleek_choice'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find episodes about developing a growth mindset in Remarkable People Podcast."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'astrodaily', 'defillama', 'CTCP', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the key takeaways from the .rtf document?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MemeGenerator', 'revelo_talent_finder', 'shopbest', 'PlaylistAI_for_Spotify', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get the details of post with ID 12 from my WordPress website example.com."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['defillama', 'contentifyMarketingAI', 'talkfpl', 'WhizList', 'AgentSQL'], and the introduction and usage of each API is as follows: \n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a web app for managing a library with a books table."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'monarch', 'DobaWorldFactory', 'astrodaily', 'ixigo_trip_planner'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me the total sales for each customer in the sales table"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'Austrian_Bank_Rates', 'uk_politics', 'fiscalnote', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How fast is my website, mysite.net, loading?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'CreditYelp', 'talkwithdocs', 'open_prompt_library', 'mytomorrows_clinical_trial_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "merge the following PDFs into a single PDF"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['quick_url', 'timenavi', 'scholarai', 'ixigo_trip_planner', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I would like a relaxing jazz playlist for my dinner party tonight."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'astrodaily', 'hackit_web_scanner', 'MemeGenerator', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want a Mocking SpongeBob meme with the text 'uSInG ChaTGPt'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'AeroDex', 'serviceCheck', 'CreditYelp', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get me stats on my link http://quicku.rl/xyz12 for the last 24 hours"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['directual', 'noteable', 'remarkable_people_podcast_spext', 'smarter_contracts', 'hackit_web_scanner'], and the introduction and usage of each API is as follows: \n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Don't want to spend time making a playlist, please make one for me"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'hadith', 'astrodaily', 'talkfpl', 'monarch'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need assistance in writing the character '友' step by step"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'astrodaily', 'hadith', 'Coupert', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can I get statistical data for Alphabet Inc. (GOOGL) over the last 10 days?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'directual', 'aiAgents', 'AaronBrowser', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What's the total ad spend on TikTok ads in the last week?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'CMoneyPortfolio', 'drink_maestro', 'MemeGenerator', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can I get baby shower gift ideas for my friend with a budget of $100?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PEForNFTs', 'avian', 'CTCP', 'AgentSQL', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you find me children's toy factories in the European market?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'consensus_search', 'remarkable_people_podcast_spext', 'astrodaily', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you create a playlist for me using the list of songs provided?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkwithdocs', 'Rogo', 'mytomorrows_clinical_trial_search', 'Persona', 'WhizList'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Assist me in planning a trip from Berlin to Lisbon. Depart on the 5th of May and return on the 13th of May. The total budget is $1000."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['uk_politics', 'fiscalnote', 'remarkable_people_podcast_spext', 'WPressGenie', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How does Son perform against top 6 teams?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'contentifyMarketingAI', 'avian', 'Persona', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the key ideas of existentialism?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['mytomorrows_clinical_trial_search', 'noteable', 'giftwrap', 'hackit_web_scanner', 'aiAgents'], and the introduction and usage of each API is as follows: \n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "On my WordPress blog at myblog.com, find articles containing the term 'AI' and list them."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['bgg_assistant', 'MixerBox_OnePlayer_music', 'Rogo', 'booktickets', 'open_prompt_library'], and the introduction and usage of each API is as follows: \n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Tell me about non-governmental organizations focusing on animal welfare in the state of Texas."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'trambellir_treatments', 'revelo_talent_finder', 'drink_maestro', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find genes associated with Alzheimer's disease."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'university_lecture_retrieval', 'clearbit_integration', 'revelo_talent_finder', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How much time have I spent on meetings for Project A?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'Astrology', 'paperchat', 'WhizList', 'hadith'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want an Expanding Brain meme. Text should be 'Chatbot', 'ChatGPT', 'MemeGenerator'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['lawyer_lookup', 'talkfpl', 'DobaWorldFactory', 'Austrian_Bank_Rates', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find information about Google as a company"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fiscalnote', 'revelo_talent_finder', 'MixerBox_OnePlayer_music', 'WPressGenie', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Get rid of the 'Movie_Night' service from the list"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'directual', 'Rogo', 'ask_my_first_million_podcast_chatbot', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Obtain the latest papers on artificial intelligence and robotics"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'PlaylistAI_for_Spotify', 'Persona', 'shopbest', 'clearbit_integration'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you suggest a wedding gift for my cousin?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'booktickets', 'charity', 'fortunecookie', 'ad4mat'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to see top 8 home security systems with medium review summaries."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['scholarai', 'hackit_web_scanner', 'lawyer_lookup', 'AeroDex', 'university_lecture_retrieval'], and the introduction and usage of each API is as follows: \n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a 'This is fine' meme with custom image URL"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'CreditYelp', 'form', 'converter_app', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find me a web design course for beginners."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'lawyer_lookup', 'consensus_search', 'quick_url', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you find flights from Tokyo to Los Angeles under $500?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'hackit_web_scanner', 'Austrian_Bank_Rates', 'serviceCheck', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the cheapest flights from Bangkok to Madrid on the 30th of April?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['DobaWorldFactory', 'ixigo_trip_planner', 'PlaylistAI_for_Spotify', 'converter_app', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Help me plan a trip from Sydney to Bangkok between July 1st and July 10th, keeping the budget under $1800."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'form', 'fortunecookie', 'defillama', 'Chainstack'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What steps to follow for building a small-scale moderate complexity web3 app with Directual?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Chainstack', 'university_lecture_retrieval', 'AaronBrowser', 'paperchat', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What does the hadith say about honesty?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['three_sentence_service', 'sleek_choice', 'StockData', 'mytomorrows_clinical_trial_search', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Download YouTube video and convert it to MP3 format"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'hadith', 'serviceCheck', 'shopbest', 'form'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Determine the payoff schedule for a $50,000 investment loan with a 5-year term and an interest rate of 5.75%."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Shop_AIssistant', 'MemeGenerator', 'For_io', 'quick_url', 'consensus_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'consensus_search', 'description': 'Get answers & insights directly from 200M+ scientific papers. To use, just ask a research question.', 'api_function': 'consensus_search(query: str, num_results: int = 10, sort_by: str = \"relevance\", include_claims: bool = True, include_papers: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Calculate the total revenue generated by product category for the month of February 2020"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'contentifyMarketingAI', 'Coupert', 'AgentSQL', 'Xpapers_arXiv_paper_database'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Is it possible to build a complex web3 app with Directual?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['smarter_contracts', 'WhizList', 'charity', 'hackit_web_scanner', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the top 3 discounts for Best Buy?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MLPaperReader', 'university_lecture_retrieval', 'search', 'form', 'PHITURE'], and the introduction and usage of each API is as follows: \n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Shorten the following link: https://www.example.org/article and set its expiration date to 30 days from now."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Rogo', 'Tarot', 'trambellir_treatments', 'lawyer_lookup', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Rewrite the text on this page in a simpler form: https://www.example.com/complex"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['aiAgents', 'search', 'clearbit_integration', 'university_lecture_retrieval', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'aiAgents', 'description': 'Unleashing the power of multiple AIs: One goal, limitless productivity.', 'api_function': 'aiAgents(userDescription: str, chatGPTDescription: str, query: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am looking for flights from Rio de Janeiro to Istanbul for under €600 between 5th and 10th October."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'contentifyMarketingAI', 'ad4mat', 'Xpapers_arXiv_paper_database', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'contentifyMarketingAI', 'description': \"Analyze and evaluate every aspect of your website's marketing. Ask 'How can you improve your website to maximize ROI?'\", 'api_function': 'contentifyMarketingAI(website: str, queryType: str, aspect: str = None, goal: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the key points from the Scottish National Party's (SNP) latest press release?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['clearbit_integration', 'html_css_japanese_stroke_viewer', 'giftwrap', 'WhizList', 'Persona'], and the introduction and usage of each API is as follows: \n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Seek the latest five updates on gun control in political news."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['PlaylistAI_for_Spotify', 'open_prompt_library', 'ixigo_trip_planner', 'html_css_japanese_stroke_viewer', 'trambellir_treatments'], and the introduction and usage of each API is as follows: \n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me some diseases related to irregular heartbeat."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AaronBrowser', 'MLPaperReader', 'voiceover', 'drink_maestro', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are the historical statistics for the Aave protocol from January 1st to January 7th?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['serviceCheck', 'form', 'AI2sql', 'remarkable_people_podcast_spext', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you tell me the P/E ratio for the Bored Ape Yacht Club NFTs?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['AgentSQL', 'giftwrap', 'Tarot', 'StockData', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve Ether balance of address 0x742d35Cc6634C0532925a3b844Bc454e4438f44e."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'WhizList', 'Tarot', 'fiscalnote', 'PEForNFTs'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'PEForNFTs', 'description': 'Get the price to earnings ratio for any NFT collection!', 'api_function': 'PEForNFTs(collection: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the sales data for January in the CSV?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['booktickets', 'Tarot', 'open_prompt_library', 'hadith', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'booktickets', 'description': 'Explore and secure tickets for a variety of events around the world.', 'api_function': 'booktickets(location: str, date_start: str, date_end: str, event_type: str)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I would like detailed information about the progress in stem cell research for regenerative medicine."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'directual', 'mytomorrows_clinical_trial_search', 'AI2sql', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'directual', 'description': 'Directual is a full-stack no-code platform that is great for launching web and web3 apps of any complexity and scale.', 'api_function': 'directual(action: str, appType: str, complexity: str, scale: str)'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please display images about the Hubble Space Telescope from NASA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'Austrian_Bank_Rates', 'CLevelResume', 'giftwrap', 'paperchat'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How can I improve my creativity and innovation skills?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['shopbest', 'talkfpl', 'Xpapers_arXiv_paper_database', 'Rogo', 'search'], and the introduction and usage of each API is as follows: \n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for flights from Delhi to Zurich on the 7th of December with layovers under 2 hours."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'DobaWorldFactory', 'WhizList', 'form', 'fortunecookie'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Show me papers on natural language processing with references"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'defillama', 'ad4mat', 'MemeGenerator', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Locate high-rated detox retreats in Spain"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['fortunecookie', 'defillama', 'CLevelResume', 'talkfpl', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need a playlist for a dinner party"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['StockData', 'open_prompt_library', 'Astrology', 'PlaylistAI_for_Spotify', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'open_prompt_library', 'description': 'Use prompts from an open database! Create prompts and search by title or prompt similarity. List the top prompts.', 'api_function': 'open_prompt_library(search_type: str, query: str, time_frame: str = None, top_prompts: int = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'PlaylistAI_for_Spotify', 'description': 'PlaylistAI is an app for generating Spotify music playlists. Not affiliated with Spotify.', 'api_function': 'PlaylistAI_for_Spotify(song_list: list, user_id: str, access_token: str)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Is there a bankruptcy lawyer in Santa Barbara who can communicate in French?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['talkfpl', 'ad4mat', 'Shop_AIssistant', 'drink_maestro', 'serviceCheck'], and the introduction and usage of each API is as follows: \n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to learn more about UNICEF USA."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['MixerBox_OnePlayer_music', 'three_sentence_service', 'quick_url', 'uk_politics', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'MixerBox_OnePlayer_music', 'description': 'Unlimited music, podcasts, and videos across various genres. Enjoy endless listening with our rich playlists!', 'api_function': 'MixerBox_OnePlayer_music(search: str, category: str, mood: Optional[str] = None, genre: Optional[str] = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'uk_politics', 'description': \"Search through UK political documents such as speeches, press releases, voting records, and candidates' profiles.\", 'api_function': 'uk_politics(search_term: str, document_type: str, year: int = None, party: str = None, politician: str = None)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Monitor and notify me when these sneakers become available on this website: https://www.example-shop.com/shoes"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'Persona', 'AgentSQL', 'three_sentence_service', 'For_io'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to verify if the e-mail server for mail.example.com is responding"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Coupert', 'charity', 'astrodaily', 'vafl', 'timenavi'], and the introduction and usage of each API is as follows: \n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find the names and email addresses of all users who signed up between January and March 2021"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'hadith', 'remarkable_people_podcast_spext', 'trambellir_treatments', 'shopbest'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'shopbest', 'description': 'Shop and get summarized reviews for the best products on Amazon.', 'api_function': 'shopbest(product_category: str, review_length: int, sort_by: str, limit: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Give me tips for networking in the tech community."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['university_lecture_retrieval', 'search', 'voiceover', 'bgg_assistant', 'charity'], and the introduction and usage of each API is as follows: \n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Access the weather at EWR airport for me, please"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['charity', 'tutory', 'defillama', 'fiscalnote', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide the P/E ratio of the World of Women collection!"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'AeroDex', 'hackit_web_scanner', 'smarter_contracts', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I need research on neural networks with abstracts and references"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['astrodaily', 'hackit_web_scanner', 'search', 'AI2sql', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Fetch Ethereum account nonce for the address 0xde087b520c5ba885d20dfbe2345291620050dbdc."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['ixigo_trip_planner', 'Rogo', 'bgg_assistant', 'timenavi', 'three_sentence_service'], and the introduction and usage of each API is as follows: \n{'api_name': 'ixigo_trip_planner', 'description': 'PLAN your trips! Search for best flights & get recommendations where you can travel on your budget.', 'api_function': 'ixigo_trip_planner(origin_city: str, destination_city: str, departure_date: str, return_date: str, budget: float)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"}\n{'api_name': 'bgg_assistant', 'description': 'Discover board games with BoardGameGeek Assistant! Find games, see trending games, monitor your plays and collection...', 'api_function': 'bgg_assistant(endpoint: str, search: Optional[str] = None, game_id: Optional[int] = None, category: Optional[str] = None, num_results: Optional[int] = 10)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Retrieve the contact details of suppliers who provided materials to the company in the last six months"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['form', 'remarkable_people_podcast_spext', 'Austrian_Bank_Rates', 'hackit_web_scanner', 'scholarai'], and the introduction and usage of each API is as follows: \n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'scholarai', 'description': 'Unleash scientific research: search 40M+ peer-reviewed papers, explore scientific PDFs, and save to reference managers.', 'api_function': 'scholarai(query: str, detail_level: str, zotero_user_id: str, zotero_api_key: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Search for the best deals on TVs by crawling these two websites: https://www.examplestore1.com/TVs and https://www.examplestore2.com/TVs"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'kiwicom_assistant_and_flights_search', 'revelo_talent_finder', 'university_lecture_retrieval', 'Rogo'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'Rogo', 'description': 'Answers questions about open-source repositories.', 'api_function': \"Rogo(query: str, result_format: str='table', chart_image: bool=False)\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Discover the most luxurious wellness resorts in the Maldives"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['revelo_talent_finder', 'fortunecookie', 'search', 'AgentSQL', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'}\n{'api_name': 'fortunecookie', 'description': 'Select a number from 1 to 10 and let the digital cookie guide your day!', 'api_function': 'fortunecookie(user_number: int, metadata_request: bool)'}\n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'AgentSQL', 'description': 'Interact with your Snowflake databases or your csv files.', 'api_function': 'AgentSQL(dataSource: str, database: str, tableName: str, query: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to know about comedy shows in Tokyo on the 5th of September."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Shop_AIssistant', 'serviceCheck', 'CLevelResume', 'noteable'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Create a short link from this URL: https://www.example.net/long-url and I would like to use a custom domain for it, myshorturl.com"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['search', 'talkwithdocs', 'lawyer_lookup', 'paperchat', 'Shop_AIssistant'], and the introduction and usage of each API is as follows: \n{'api_name': 'search', 'description': 'Level up your design skills quickly with a wide range of design courses, interactive workshops and AI-guided mentorship.', 'api_function': 'search(query: str, count: int = 5)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "List the top 3 midfielders to transfer in under 9 million"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'drink_maestro', 'astrodaily', 'university_lecture_retrieval', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to understand any possible security issues with my website mypersonalblog.com."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['noteable', 'MLPaperReader', 'timenavi', 'kiwicom_assistant_and_flights_search', 'AaronBrowser'], and the introduction and usage of each API is as follows: \n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'timenavi', 'description': 'Interact with your calendar. Analyze and create events, understand and plan your time better.', 'api_function': 'timenavi(action: str, user_id: int, event_name: str = None, start_time: str = None, end_time: str = None, event_description: str = None, category: str = None)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Determine the price to earnings ratio for Sorare NFTs."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['giftwrap', 'university_lecture_retrieval', 'CreditYelp', 'vafl', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'vafl', 'description': 'Your personal gift advisor. Find a perfect experience for anyone.', 'api_function': 'vafl(endpoint: str, description: str, location: str = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Could you guide me through the process of solving a system of linear equations?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Tarot', 'hadith', 'Shop_AIssistant', 'trambellir_treatments', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'Shop_AIssistant', 'description': 'A shopping assistant helping with the search through a large product catalog.', 'api_function': 'Shop_AIssistant(product: str, max_price: float, merchant: str = None, category: str = None)'}\n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate a vegetarian recipe for a dinner with 4 guests"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WhizList', 'university_lecture_retrieval', 'MLPaperReader', 'fiscalnote', 'CreditYelp'], and the introduction and usage of each API is as follows: \n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'university_lecture_retrieval', 'description': 'Discover and access the right moments in open course lectures for targeted learning.', 'api_function': 'university_lecture_retrieval(search_terms: str, course_subject: str, result_limit: int)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'fiscalnote', 'description': 'FiscalNote enables access to select market-leading, real-time data sets for legal, political, and regulatory information', 'api_function': 'fiscalnote(dataType: str, keyword: str, limit: int = 10)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you recommend podcasts about entrepreneurship and growth?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['sleek_choice', 'talkfpl', 'noteable', 'drink_maestro', 'MemeGenerator'], and the introduction and usage of each API is as follows: \n{'api_name': 'sleek_choice', 'description': \"Save time! Let's try effortlessly discover top-rated items within a specified budget range on Amazon.\", 'api_function': 'sleek_choice(category: str, budget_min: float, budget_max: float, currency: str)'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like an Australian male AI voice to read this: 'The weather today is sunny with a high of 30 degrees.'"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'converter_app', 'Chainstack', 'PHITURE', 'lawyer_lookup'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'}\n{'api_name': 'Chainstack', 'description': \"Enables natural language interaction with EVM blockchains using Chainstack's infrastructure.\", 'api_function': 'Chainstack(operation: str, blockchain_type: str, contract_address: str, data: Optional[str] = None)'}\n{'api_name': 'PHITURE', 'description': 'App Store Optimization by Phiture: keyword popularity, estimate impressions & uncover trends.', 'api_function': 'PHITURE(keyword: str, platform: str, region: str)'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Turn this text 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.' to audio with a deep male voice."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Austrian_Bank_Rates', 'defillama', 'Xpapers_arXiv_paper_database', 'monarch', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'defillama', 'description': 'Retrieve data on DeFi protocols and blockchains.', 'api_function': 'defillama(protocol: str, data_type: str, start_date: str = None, end_date: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'monarch', 'description': 'Search and retrieve basic information from the Monarch Initiative knowledge graph.', 'api_function': 'monarch(search_term: str, search_type: str, offset: int = 0, limit: int = 10)'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you search for any malware on secureonlinebanking.com?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['For_io', 'WhizList', 'AeroDex', 'Coupert', 'kiwicom_assistant_and_flights_search'], and the introduction and usage of each API is as follows: \n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'kiwicom_assistant_and_flights_search', 'description': \"We hack the system, you fly for less. Book cheap flights other sites simply can't find.\", 'api_function': 'kiwicom_assistant_and_flights_search(origin: str, destination: str, departure_date: str, return_date: str = \"\", min_price: int = 0, max_price: int = 0, minlength: int = 0, maxlength: int = 0)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Look for any broken links in my company's website: corporatesolution.example."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'lawyer_lookup', 'AI2sql', 'ad4mat', 'StockData'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'lawyer_lookup', 'description': 'Search for lawyers by name, specialty, language, and City.  Currently limited to California, USA.', 'api_function': 'lawyer_lookup(name: str = None, specialty: str = None, language: str = None, city: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'ad4mat', 'description': 'Generate affiliate tracking links to monetize outgoing traffic - based on 50,000+ advertisers.', 'api_function': 'ad4mat(api_key: str, user_id: int, site_id: int, product_urls: List[str])'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I want to improve my skills in UX design, suggest some workshops please."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['voiceover', 'noteable', 'AI2sql', 'WPressGenie', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'AI2sql', 'description': 'Converts a natural language text into an SQL query.', 'api_function': 'AI2sql(natural_text: str)'}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Please provide the top articles on computer vision and object detection"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Astrology', 'AeroDex', 'For_io', 'talkfpl', 'smarter_contracts'], and the introduction and usage of each API is as follows: \n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'talkfpl', 'description': 'Talk with AI to help you manage your FPL team. Compare players, transfer options and more.', 'api_function': \"talkfpl(action: str, player1: str, player2: str='', team_id: int=0, transfer_budget: float=0.0, wildcard: bool=False)\"}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "How would Master Yoda motivate someone going through a tough moment?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['tutory', 'AaronBrowser', 'WPressGenie', 'CLevelResume', 'voiceover'], and the introduction and usage of each API is as follows: \n{'api_name': 'tutory', 'description': 'Access affordable, on-demand tutoring and education right at your fingertips.', 'api_function': 'tutory(mode: str, subject: str, topic: str, user_query: str)'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Generate affiliate links for these clothing items to boost revenue"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'AaronBrowser', 'astrodaily', 'WhizList', 'avian'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'AaronBrowser', 'description': \"I'll scrape data from multiple website URLs. Built for Internet crawling, content aggregation, and monitoring.\", 'api_function': \"AaronBrowser(url: str, action: str, query: str = None, language: str = 'en')\"}\n{'api_name': 'astrodaily', 'description': 'Search and discover NASA images.', 'api_function': 'astrodaily(action: str, query: str = \"\", date: str = \"\")'}\n{'api_name': 'WhizList', 'description': 'Your go-to for creating amazing Spotify playlists.', 'api_function': 'WhizList(genre: str, mood: str, decade: str, length: int, popularity: str)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Analyze hackthissite.org for potential threats by scanning all the links on the first page."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'mytomorrows_clinical_trial_search', 'avian', 'Xpapers_arXiv_paper_database', 'converter_app'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'mytomorrows_clinical_trial_search', 'description': 'Discover and filter clinical trials worldwide; updated daily.', 'api_function': 'mytomorrows_clinical_trial_search(condition: str, location: str = None, phase: str = None, status: str = None, start_date: str = None)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'Xpapers_arXiv_paper_database', 'description': 'Effortlessly find real academic papers on arXiv. Dive into abstracts, references, and access public PDF URLs.', 'api_function': 'Xpapers_arXiv_paper_database(keywords: str, limit: int = 10, show_abstracts: bool = False, show_references: bool = False, show_pdf_urls: bool = True)'}\n{'api_name': 'converter_app', 'description': 'Convert currencies or files like images and videos from web links and Google Drive to other formats, or work with PDFs.', 'api_function': 'converter_app(action: str, input_url: str, input_format: str, output_format: str, additional_params: dict = {})'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Provide me with the top available offers on Home Depot"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CTCP', 'CLevelResume', 'Austrian_Bank_Rates', 'three_sentence_service', 'AeroDex'], and the introduction and usage of each API is as follows: \n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'three_sentence_service', 'description': 'Managing a three sentence service. You can add, remove, view and invoke your 3 sentence services.', 'api_function': 'three_sentence_service(action: str, service_name: str, sentences: Optional[List[str]] = None)'}\n{'api_name': 'AeroDex', 'description': 'Get aviation weather from aviationweather.gov and access Advisory Circulars & handbooks for pilots and student pilots.', 'api_function': 'AeroDex(call_type: str, station_id: str, document_name: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Discuss the limitations and challenges in the field of reinforcement learning."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['remarkable_people_podcast_spext', 'drink_maestro', 'CreditYelp', 'serviceCheck', 'Tarot'], and the introduction and usage of each API is as follows: \n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'}\n{'api_name': 'CreditYelp', 'description': 'Access various essential financial calculators for a detailed repayment schedule and payoff term.', 'api_function': 'CreditYelp(loan_type: str, principal: float, interest_rate: float, loan_duration: int)'}\n{'api_name': 'serviceCheck', 'description': 'Check if services are running and how fast they are responding. You can check Website, Email, Domain Lookup and Ping.', 'api_function': 'serviceCheck(serviceType: str, host: str, optionalArgs: dict = {})'}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Make a Two Buttons meme with 'Try ChatGPT' on the red button and 'Ignore AI' on the blue button"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['Persona', 'Austrian_Bank_Rates', 'CTCP', 'smarter_contracts', 'revelo_talent_finder'], and the introduction and usage of each API is as follows: \n{'api_name': 'Persona', 'description': 'Dive into simulated chat adventures with your beloved heroes, experts, and celebs!.', 'api_function': 'Persona(character_name: str, character_trait: str, character_expertise: str)'}\n{'api_name': 'Austrian_Bank_Rates', 'description': 'Compare the rates and terms of checking accounts and savings accounts from Austrian banks.', 'api_function': 'Austrian_Bank_Rates(bank_name: str, product_type: str, detail: Optional[str] = None)'}\n{'api_name': 'CTCP', 'description': 'Analyze eligibility criteria in ClinicalTrials.gov. Example input: nctid NCT05859269', 'api_function': 'CTCP(nctid: str)'}\n{'api_name': 'smarter_contracts', 'description': 'Analyze smart contracts and tokens on Ethereum, Polygon, and other EVM-compatible networks.', 'api_function': 'smarter_contracts(network: str, contract_address: str, query_type: str)'}\n{'api_name': 'revelo_talent_finder', 'description': \"Search through Revelo's Talent Database to match with the best Software Engineers according to your position needs.\", 'api_function': 'revelo_talent_finder(job_position: str, experience: int, skills: list, location: str = None, remote: bool = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I am looking for the best laptops with short summarized reviews."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['paperchat', 'voiceover', 'form', 'html_css_japanese_stroke_viewer', 'DobaWorldFactory'], and the introduction and usage of each API is as follows: \n{'api_name': 'paperchat', 'description': 'Search through arXiv publications.', 'api_function': 'paperchat(query: str, max_results: int, search_fields: str)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'form', 'description': 'Allows you to create AI-Powered Forms, Surveys, Quizzes, or Questionnaires on Yay! Forms.', 'api_function': 'form(tool: str, user_description: str, chatgpt_description: str, form_type: str, questions: list)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'DobaWorldFactory', 'description': 'World Factory: Searching for the best manufacturers worldwide.', 'api_function': 'DobaWorldFactory(product_query: str, trade_region: str, additional_info: Optional[str] = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Find all customers who have not made a purchase in the last 30 days"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hackit_web_scanner', 'charity', 'clearbit_integration', 'quick_url', 'ask_my_first_million_podcast_chatbot'], and the introduction and usage of each API is as follows: \n{'api_name': 'hackit_web_scanner', 'description': 'AI Powered Web Scanner by HACKIT.', 'api_function': 'hackit_web_scanner(url: str, depth: int, user_agent: str, scan_type: str)'}\n{'api_name': 'charity', 'description': 'Get data on US-based non-profits including mission, key people, governance, ratings and financial data.', 'api_function': 'charity(name: str, city: str = None, state: str = None, category: str = None)'}\n{'api_name': 'clearbit_integration', 'description': 'Access Clearbit Enrichment, Prospecting, Reveal APIs and website visitors data to access information about companies.', 'api_function': 'clearbit_integration(query_type: str, search_term: str, additional_params: dict = None)'}\n{'api_name': 'quick_url', 'description': 'Shorten your links and track clicks on them.', 'api_function': 'quick_url(action: str, link: str, optional_args: dict = {})'}\n{'api_name': 'ask_my_first_million_podcast_chatbot', 'description': 'Ask the hosts of the My First Million questions about business, tech, entrepreneurship, and life.', 'api_function': 'ask_my_first_million_podcast_chatbot(question: str) '} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What is the total supply of tokens on the Ethereum contract 0x123456789ABCDEF?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['trambellir_treatments', 'giftwrap', 'voiceover', 'Coupert', 'remarkable_people_podcast_spext'], and the introduction and usage of each API is as follows: \n{'api_name': 'trambellir_treatments', 'description': 'Online Marketplace for Wellness holidays.', 'api_function': 'trambellir_treatments(search_query: str, results_limit: int, location: str, sort_by: str)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'voiceover', 'description': 'Convert text into studio-quality audio. Create realistic AI voices for your next videos, podcasts, and more.', 'api_function': 'voiceover(text: str, voice_type: str, speed: float, pitch: float, output_format: str)'}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'}\n{'api_name': 'remarkable_people_podcast_spext', 'description': \"Chat with the Guy Kawasaki's Remarkable People Podcast library on Spext.\", 'api_function': 'remarkable_people_podcast_spext(search_query: str, episode_limit: int, sort_by: str, time_range: str)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Can you show me all the transactions that happened in 2021 in the transactions table?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['WPressGenie', 'noteable', 'giftwrap', 'Astrology', 'html_css_japanese_stroke_viewer'], and the introduction and usage of each API is as follows: \n{'api_name': 'WPressGenie', 'description': 'Manages a WordPress site. You can get, view and analyze details of WordPress posts and content.', 'api_function': 'WPressGenie(site_url: str, action: str, post_id: int = -1, post_type: str = \"\", search_term: str = \"\", category: str = \"\")'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'giftwrap', 'description': 'Ask about gift ideas for any occasion and recipient. Get it wrapped and delivered, no address needed.', 'api_function': 'giftwrap(occasion: str, recipient: str, relationship: str, optional budget: float = None, optional interests: str = None)'}\n{'api_name': 'Astrology', 'description': 'Discover your cosmic DNA. Dive into your exact birth (natal) chart for growth, purpose, and healing.', 'api_function': 'Astrology(birth_year: int, birth_month: int, birth_day: int, birth_time: str, birth_location: str)'}\n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "I'd like to ask Albert Einstein about his views on the universe's expansion."
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['hadith', 'MemeGenerator', 'Tarot', 'avian', 'drink_maestro'], and the introduction and usage of each API is as follows: \n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'MemeGenerator', 'description': 'Your AI meme generator.', 'api_function': \"MemeGenerator(template: str, text1: str, text2: str = '', image_url: str = '')\"}\n{'api_name': 'Tarot', 'description': 'Experience powerful, personalized readings. Let the cards give you spiritual insight and guidance.', 'api_function': 'Tarot(inquiry: str, user_id: int)'}\n{'api_name': 'avian', 'description': 'Analyze & visualize data from 20+ platforms, including Google Analytics, Google Ads & Facebook Ads.', 'api_function': 'avian(platform: str, query_type: str, start_date: str, end_date: str, account_id: str = None)'}\n{'api_name': 'drink_maestro', 'description': 'Learn to mix any drink you can imagine (real or made-up), and discover new ones. Includes drink images.', 'api_function': 'drink_maestro(drink_name: str, language: str = \"en\", pun_jokes: bool = True, emojis: bool = True, translate_to: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "What are some top-rated blenders for a budget between $30 and $150?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['CLevelResume', 'noteable', 'talkwithdocs', 'StockData', 'Coupert'], and the introduction and usage of each API is as follows: \n{'api_name': 'CLevelResume', 'description': \"I'll create an ATS-optimized C-Level executive resume, designed to land your senior-level job.\", 'api_function': 'CLevelResume(tailor_position: bool, job_url: str, job_details: dict, user_wishes: dict)'}\n{'api_name': 'noteable', 'description': 'Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.', 'api_function': 'noteable(task: str, file_id: str, cell_id: str = None, kernel: str = None, code: str = None)'}\n{'api_name': 'talkwithdocs', 'description': 'Ask any questions to your docs.', 'api_function': 'talkwithdocs(file_path: str, query: str, file_type: str)'}\n{'api_name': 'StockData', 'description': 'Analyze stocks and get comprehensive real-time investment data and analytics.', 'api_function': \"StockData(symbol: str, content: str, period: str = '1d')\"}\n{'api_name': 'Coupert', 'description': 'Search for the internet’s best coupons from thousands of online stores.', 'api_function': 'Coupert(query: str, store: str, numOfCoupons: int)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    },
    {
        "conversations": [
            {
                "from": "human",
                "value": "Who are the authors of the research paper in the .txt file?"
            },
            {
                "from": "gpt",
                "value": "#Begin# Need to look up the API Pool. #SearchAPI# The API Pool including: ['html_css_japanese_stroke_viewer', 'MLPaperReader', 'hadith', 'For_io', 'CMoneyPortfolio'], and the introduction and usage of each API is as follows: \n{'api_name': 'html_css_japanese_stroke_viewer', 'description': 'Educational tool to help with learning Japanese writing strokes using animations.', 'api_function': 'html_css_japanese_stroke_viewer(character: str, step_by_step: bool)'}\n{'api_name': 'MLPaperReader', 'description': 'Search for ML papers on different topics and speed up research by \"talking\" to the PDFs.', 'api_function': 'MLPaperReader(topic: str, question: str, max_results: int)'}\n{'api_name': 'hadith', 'description': 'Ask a question and get advice from hadith.', 'api_function': 'hadith(topic: str, max_results: int, search_type: str = \"context\")'}\n{'api_name': 'For_io', 'description': 'Create feature-rich web apps by simply writing the requirements.', 'api_function': 'For_io(task: str, schema: dict, requirements: str, options: dict = {})'}\n{'api_name': 'CMoneyPortfolio', 'description': 'Analyze Taiwan stocks and get exclusive investing data from leading fintech CMoney in Taiwan.', 'api_function': 'CMoneyPortfolio(stockName: str, queryType: str, startDate: str = None, endDate: str = None, period: str = None)'} #NoCallAPI# There is no proper API and I need to answer this question with my own knowledge. #End#"
            }
        ]
    }
]